// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Consumption
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for MarketplacesOperations
    /// </summary>
    public static partial class MarketplacesOperationsExtensions
    {
        /// <summary>
        /// Lists the marketplaces for a scope by subscriptionId. Marketplaces are
        /// available via this API only for May 1, 2014 or later.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='odataQuery'>
        /// 
        /// </param>
        /// <param name='skiptoken'>
        /// Skiptoken is only used if a previous operation returned a partial result.
        /// If a previous response contains a nextLink element, the value of the
        /// nextLink element will include a skiptoken parameter that specifies a
        /// starting point to use for subsequent calls.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Marketplace> List(this IMarketplacesOperations operations, Microsoft.Rest.Azure.OData.ODataQuery<Marketplace> odataQuery = default(Microsoft.Rest.Azure.OData.ODataQuery<Marketplace>), string skiptoken = default(string))
        {
                return ((IMarketplacesOperations)operations).ListAsync(odataQuery, skiptoken).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the marketplaces for a scope by subscriptionId. Marketplaces are
        /// available via this API only for May 1, 2014 or later.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='odataQuery'>
        /// 
        /// </param>
        /// <param name='skiptoken'>
        /// Skiptoken is only used if a previous operation returned a partial result.
        /// If a previous response contains a nextLink element, the value of the
        /// nextLink element will include a skiptoken parameter that specifies a
        /// starting point to use for subsequent calls.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Marketplace>> ListAsync(this IMarketplacesOperations operations, Microsoft.Rest.Azure.OData.ODataQuery<Marketplace> odataQuery = default(Microsoft.Rest.Azure.OData.ODataQuery<Marketplace>), string skiptoken = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(odataQuery, skiptoken, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the marketplaces for a scope by billing period and subscripotionId.
        /// Marketplaces are available via this API only for May 1, 2014 or later.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='odataQuery'>
        /// 
        /// </param>
        /// <param name='skiptoken'>
        /// Skiptoken is only used if a previous operation returned a partial result.
        /// If a previous response contains a nextLink element, the value of the
        /// nextLink element will include a skiptoken parameter that specifies a
        /// starting point to use for subsequent calls.
        /// </param>
        /// <param name='billingPeriodName'>
        /// Billing Period Name.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Marketplace> ListByBillingPeriod(this IMarketplacesOperations operations, string billingPeriodName, Microsoft.Rest.Azure.OData.ODataQuery<Marketplace> odataQuery = default(Microsoft.Rest.Azure.OData.ODataQuery<Marketplace>), string skiptoken = default(string))
        {
                return ((IMarketplacesOperations)operations).ListByBillingPeriodAsync(billingPeriodName, odataQuery, skiptoken).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the marketplaces for a scope by billing period and subscripotionId.
        /// Marketplaces are available via this API only for May 1, 2014 or later.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='odataQuery'>
        /// 
        /// </param>
        /// <param name='skiptoken'>
        /// Skiptoken is only used if a previous operation returned a partial result.
        /// If a previous response contains a nextLink element, the value of the
        /// nextLink element will include a skiptoken parameter that specifies a
        /// starting point to use for subsequent calls.
        /// </param>
        /// <param name='billingPeriodName'>
        /// Billing Period Name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Marketplace>> ListByBillingPeriodAsync(this IMarketplacesOperations operations, string billingPeriodName, Microsoft.Rest.Azure.OData.ODataQuery<Marketplace> odataQuery = default(Microsoft.Rest.Azure.OData.ODataQuery<Marketplace>), string skiptoken = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByBillingPeriodWithHttpMessagesAsync(billingPeriodName, odataQuery, skiptoken, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the marketplaces for a scope by subscriptionId. Marketplaces are
        /// available via this API only for May 1, 2014 or later.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Marketplace> ListNext(this IMarketplacesOperations operations, string nextPageLink)
        {
                return ((IMarketplacesOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the marketplaces for a scope by subscriptionId. Marketplaces are
        /// available via this API only for May 1, 2014 or later.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Marketplace>> ListNextAsync(this IMarketplacesOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the marketplaces for a scope by billing period and subscripotionId.
        /// Marketplaces are available via this API only for May 1, 2014 or later.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Marketplace> ListByBillingPeriodNext(this IMarketplacesOperations operations, string nextPageLink)
        {
                return ((IMarketplacesOperations)operations).ListByBillingPeriodNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the marketplaces for a scope by billing period and subscripotionId.
        /// Marketplaces are available via this API only for May 1, 2014 or later.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Marketplace>> ListByBillingPeriodNextAsync(this IMarketplacesOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByBillingPeriodNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
