// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Consumption.Models
{
    using System.Linq;

    /// <summary>
    /// reservation details resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ReservationDetails : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ReservationDetails class.
        /// </summary>
        public ReservationDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReservationDetails class.
        /// </summary>

        /// <param name="id">Resource Id.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="reservationOrderId">The reservation order ID is the identifier for a reservation purchase. Each
        /// reservation order ID represents a single purchase transaction. A
        /// reservation order contains reservations. The reservation order specifies
        /// the VM size and region for the reservations.
        /// </param>

        /// <param name="reservationId">The reservation ID is the identifier of a reservation within a reservation
        /// order. Each reservation is the grouping for applying the benefit scope and
        /// also specifies the number of instances to which the reservation benefit can
        /// be applied to.
        /// </param>

        /// <param name="skuName">This is the ARM Sku name. It can be used to join with the servicetype field
        /// in additoinalinfo in usage records.
        /// </param>

        /// <param name="reservedHours">This is the total hours reserved for the day. E.g. if reservation for 1
        /// instance was made on 1 PM, this will be 11 hours for that day and 24 hours
        /// from subsequent days.
        /// </param>

        /// <param name="usageDate">The date on which consumption occurred.
        /// </param>

        /// <param name="usedHours">This is the total hours used by the instance.
        /// </param>

        /// <param name="instanceId">This identifier is the name of the resource or the fully qualified Resource
        /// ID.
        /// </param>

        /// <param name="totalReservedQuantity">This is the total count of instances that are reserved for the
        /// reservationid.
        /// </param>
        public ReservationDetails(string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string reservationOrderId = default(string), string reservationId = default(string), string skuName = default(string), decimal? reservedHours = default(decimal?), System.DateTime? usageDate = default(System.DateTime?), decimal? usedHours = default(decimal?), string instanceId = default(string), decimal? totalReservedQuantity = default(decimal?))

        : base(id, name, type, tags)
        {
            this.ReservationOrderId = reservationOrderId;
            this.ReservationId = reservationId;
            this.SkuName = skuName;
            this.ReservedHours = reservedHours;
            this.UsageDate = usageDate;
            this.UsedHours = usedHours;
            this.InstanceId = instanceId;
            this.TotalReservedQuantity = totalReservedQuantity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the reservation order ID is the identifier for a reservation purchase.
        /// Each reservation order ID represents a single purchase transaction. A
        /// reservation order contains reservations. The reservation order specifies
        /// the VM size and region for the reservations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.reservationOrderId")]
        public string ReservationOrderId {get; private set; }

        /// <summary>
        /// Gets the reservation ID is the identifier of a reservation within a
        /// reservation order. Each reservation is the grouping for applying the
        /// benefit scope and also specifies the number of instances to which the
        /// reservation benefit can be applied to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.reservationId")]
        public string ReservationId {get; private set; }

        /// <summary>
        /// Gets this is the ARM Sku name. It can be used to join with the servicetype
        /// field in additoinalinfo in usage records.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.skuName")]
        public string SkuName {get; private set; }

        /// <summary>
        /// Gets this is the total hours reserved for the day. E.g. if reservation for
        /// 1 instance was made on 1 PM, this will be 11 hours for that day and 24
        /// hours from subsequent days.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.reservedHours")]
        public decimal? ReservedHours {get; private set; }

        /// <summary>
        /// Gets the date on which consumption occurred.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.usageDate")]
        public System.DateTime? UsageDate {get; private set; }

        /// <summary>
        /// Gets this is the total hours used by the instance.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.usedHours")]
        public decimal? UsedHours {get; private set; }

        /// <summary>
        /// Gets this identifier is the name of the resource or the fully qualified
        /// Resource ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.instanceId")]
        public string InstanceId {get; private set; }

        /// <summary>
        /// Gets this is the total count of instances that are reserved for the
        /// reservationid.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.totalReservedQuantity")]
        public decimal? TotalReservedQuantity {get; private set; }
    }
}