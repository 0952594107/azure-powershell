// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Consumption.Models
{
    using System.Linq;

    /// <summary>
    /// May be used to filter budgets by resource group, resource, or meter.
    /// </summary>
    public partial class Filters
    {
        /// <summary>
        /// Initializes a new instance of the Filters class.
        /// </summary>
        public Filters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Filters class.
        /// </summary>

        /// <param name="resourceGroups">The list of filters on resource groups, allowed at subscription level only.
        /// </param>

        /// <param name="resources">The list of filters on resources.
        /// </param>

        /// <param name="meters">The list of filters on meters, mandatory for budgets of usage category.
        /// </param>
        public Filters(System.Collections.Generic.IList<string> resourceGroups = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> resources = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> meters = default(System.Collections.Generic.IList<string>))

        {
            this.ResourceGroups = resourceGroups;
            this.Resources = resources;
            this.Meters = meters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the list of filters on resource groups, allowed at
        /// subscription level only.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceGroups")]
        public System.Collections.Generic.IList<string> ResourceGroups {get; set; }

        /// <summary>
        /// Gets or sets the list of filters on resources.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resources")]
        public System.Collections.Generic.IList<string> Resources {get; set; }

        /// <summary>
        /// Gets or sets the list of filters on meters, mandatory for budgets of usage
        /// category.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "meters")]
        public System.Collections.Generic.IList<string> Meters {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ResourceGroups != null)
            {
                if (this.ResourceGroups.Count > 10)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxItems, "ResourceGroups", 10);
                }
            }
            if (this.Resources != null)
            {
                if (this.Resources.Count > 10)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxItems, "Resources", 10);
                }
            }
            if (this.Meters != null)
            {
                if (this.Meters.Count > 10)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxItems, "Meters", 10);
                }
            }
        }
    }
}