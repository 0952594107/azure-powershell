// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Consumption.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of the marketplace usage detail.
    /// </summary>
    public partial class MarketplaceProperties
    {
        /// <summary>
        /// Initializes a new instance of the MarketplaceProperties class.
        /// </summary>
        public MarketplaceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MarketplaceProperties class.
        /// </summary>

        /// <param name="billingPeriodId">The id of the billing period resource that the usage belongs to.
        /// </param>

        /// <param name="usageStart">The start of the date time range covered by the usage detail.
        /// </param>

        /// <param name="usageEnd">The end of the date time range covered by the usage detail.
        /// </param>

        /// <param name="resourceRate">The marketplace resource rate.
        /// </param>

        /// <param name="offerName">The type of offer.
        /// </param>

        /// <param name="resourceGroup">The name of resource group.
        /// </param>

        /// <param name="orderNumber">The order number.
        /// </param>

        /// <param name="instanceName">The name of the resource instance that the usage is about.
        /// </param>

        /// <param name="instanceId">The uri of the resource instance that the usage is about.
        /// </param>

        /// <param name="currency">The ISO currency in which the meter is charged, for example, USD.
        /// </param>

        /// <param name="consumedQuantity">The quantity of usage.
        /// </param>

        /// <param name="unitOfMeasure">The unit of measure.
        /// </param>

        /// <param name="pretaxCost">The amount of cost before tax.
        /// </param>

        /// <param name="isEstimated">The estimated usage is subject to change.
        /// </param>

        /// <param name="meterId">The meter id.
        /// </param>

        /// <param name="subscriptionGuid">Subscription guid.
        /// </param>

        /// <param name="subscriptionName">Subscription name.
        /// </param>

        /// <param name="accountName">Account name.
        /// </param>

        /// <param name="departmentName">Department name.
        /// </param>

        /// <param name="consumedService">Consumed service name.
        /// </param>

        /// <param name="costCenter">The cost center of this department if it is a department and a costcenter
        /// exists
        /// </param>

        /// <param name="additionalProperties">Additional details of this usage item. By default this is not populated,
        /// unless it&#39;s specified in $expand.
        /// </param>

        /// <param name="publisherName">The name of publisher.
        /// </param>

        /// <param name="planName">The name of plan.
        /// </param>
        public MarketplaceProperties(string billingPeriodId = default(string), System.DateTime? usageStart = default(System.DateTime?), System.DateTime? usageEnd = default(System.DateTime?), decimal? resourceRate = default(decimal?), string offerName = default(string), string resourceGroup = default(string), string orderNumber = default(string), string instanceName = default(string), string instanceId = default(string), string currency = default(string), decimal? consumedQuantity = default(decimal?), string unitOfMeasure = default(string), decimal? pretaxCost = default(decimal?), bool? isEstimated = default(bool?), string meterId = default(string), string subscriptionGuid = default(string), string subscriptionName = default(string), string accountName = default(string), string departmentName = default(string), string consumedService = default(string), string costCenter = default(string), string additionalProperties = default(string), string publisherName = default(string), string planName = default(string))

        {
            this.BillingPeriodId = billingPeriodId;
            this.UsageStart = usageStart;
            this.UsageEnd = usageEnd;
            this.ResourceRate = resourceRate;
            this.OfferName = offerName;
            this.ResourceGroup = resourceGroup;
            this.OrderNumber = orderNumber;
            this.InstanceName = instanceName;
            this.InstanceId = instanceId;
            this.Currency = currency;
            this.ConsumedQuantity = consumedQuantity;
            this.UnitOfMeasure = unitOfMeasure;
            this.PretaxCost = pretaxCost;
            this.IsEstimated = isEstimated;
            this.MeterId = meterId;
            this.SubscriptionGuid = subscriptionGuid;
            this.SubscriptionName = subscriptionName;
            this.AccountName = accountName;
            this.DepartmentName = departmentName;
            this.ConsumedService = consumedService;
            this.CostCenter = costCenter;
            this.AdditionalProperties = additionalProperties;
            this.PublisherName = publisherName;
            this.PlanName = planName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the id of the billing period resource that the usage belongs to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "billingPeriodId")]
        public string BillingPeriodId {get; private set; }

        /// <summary>
        /// Gets the start of the date time range covered by the usage detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "usageStart")]
        public System.DateTime? UsageStart {get; private set; }

        /// <summary>
        /// Gets the end of the date time range covered by the usage detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "usageEnd")]
        public System.DateTime? UsageEnd {get; private set; }

        /// <summary>
        /// Gets the marketplace resource rate.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceRate")]
        public decimal? ResourceRate {get; private set; }

        /// <summary>
        /// Gets the type of offer.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "offerName")]
        public string OfferName {get; private set; }

        /// <summary>
        /// Gets the name of resource group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceGroup")]
        public string ResourceGroup {get; private set; }

        /// <summary>
        /// Gets the order number.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "orderNumber")]
        public string OrderNumber {get; private set; }

        /// <summary>
        /// Gets the name of the resource instance that the usage is about.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "instanceName")]
        public string InstanceName {get; private set; }

        /// <summary>
        /// Gets the uri of the resource instance that the usage is about.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "instanceId")]
        public string InstanceId {get; private set; }

        /// <summary>
        /// Gets the ISO currency in which the meter is charged, for example, USD.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "currency")]
        public string Currency {get; private set; }

        /// <summary>
        /// Gets the quantity of usage.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "consumedQuantity")]
        public decimal? ConsumedQuantity {get; private set; }

        /// <summary>
        /// Gets the unit of measure.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "unitOfMeasure")]
        public string UnitOfMeasure {get; private set; }

        /// <summary>
        /// Gets the amount of cost before tax.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "pretaxCost")]
        public decimal? PretaxCost {get; private set; }

        /// <summary>
        /// Gets the estimated usage is subject to change.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isEstimated")]
        public bool? IsEstimated {get; private set; }

        /// <summary>
        /// Gets the meter id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "meterId")]
        public string MeterId {get; private set; }

        /// <summary>
        /// Gets subscription guid.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subscriptionGuid")]
        public string SubscriptionGuid {get; private set; }

        /// <summary>
        /// Gets subscription name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subscriptionName")]
        public string SubscriptionName {get; private set; }

        /// <summary>
        /// Gets account name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accountName")]
        public string AccountName {get; private set; }

        /// <summary>
        /// Gets department name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "departmentName")]
        public string DepartmentName {get; private set; }

        /// <summary>
        /// Gets consumed service name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "consumedService")]
        public string ConsumedService {get; private set; }

        /// <summary>
        /// Gets the cost center of this department if it is a department and a
        /// costcenter exists
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "costCenter")]
        public string CostCenter {get; private set; }

        /// <summary>
        /// Gets additional details of this usage item. By default this is not
        /// populated, unless it&#39;s specified in $expand.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "additionalProperties")]
        public string AdditionalProperties {get; private set; }

        /// <summary>
        /// Gets the name of publisher.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publisherName")]
        public string PublisherName {get; private set; }

        /// <summary>
        /// Gets the name of plan.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "planName")]
        public string PlanName {get; private set; }
    }
}