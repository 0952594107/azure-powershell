// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using Microsoft.Azure;
using Microsoft.WindowsAzure.Commands.Compute.Automation.Models;
using Microsoft.WindowsAzure.Management.Compute;
using Microsoft.WindowsAzure.Management.Compute.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;

namespace Microsoft.WindowsAzure.Commands.Compute.Automation
{
    [Cmdlet(VerbsCommon.New, "AzureComputeArgumentList", DefaultParameterSetName = "CreateParameterListByMethodName")]
    [OutputType(typeof(object))]
    public partial class NewAzureComputeArgumentListCmdlet : ComputeAutomationBaseCmdlet
    {
        [Parameter(ParameterSetName = "CreateParameterListByMethodName", Mandatory = true, Position = 0)]
        [ValidateSet(
            "DeploymentChangeConfigurationByName",
            "DeploymentChangeConfigurationBySlot",
            "DeploymentCreate",
            "DeploymentDeleteByName",
            "DeploymentDeleteBySlot",
            "DeploymentDeleteRoleInstanceByDeploymentName",
            "DeploymentDeleteRoleInstanceByDeploymentSlot",
            "DeploymentGetByName",
            "DeploymentGetBySlot",
            "DeploymentGetPackageByName",
            "DeploymentGetPackageBySlot",
            "DeploymentListEvents",
            "DeploymentListEventsBySlot",
            "DeploymentRebootRoleInstanceByDeploymentName",
            "DeploymentRebootRoleInstanceByDeploymentSlot",
            "DeploymentRebuildRoleInstanceByDeploymentName",
            "DeploymentRebuildRoleInstanceByDeploymentSlot",
            "DeploymentReimageRoleInstanceByDeploymentName",
            "DeploymentReimageRoleInstanceByDeploymentSlot",
            "DeploymentRollbackUpdateOrUpgradeByDeploymentName",
            "DeploymentRollbackUpdateOrUpgradeByDeploymentSlot",
            "DeploymentSwap",
            "DeploymentUpdateStatusByDeploymentName",
            "DeploymentUpdateStatusByDeploymentSlot",
            "DeploymentUpgradeByName",
            "DeploymentUpgradeBySlot",
            "DeploymentWalkUpgradeDomainByDeploymentName",
            "DeploymentWalkUpgradeDomainByDeploymentSlot",
            "DNSServerAddDNSServer",
            "DNSServerDeleteDNSServer",
            "DNSServerUpdateDNSServer",
            "ExtensionImageRegister",
            "ExtensionImageUnregister",
            "ExtensionImageUpdate",
            "HostedServiceAddExtension",
            "HostedServiceCheckNameAvailability",
            "HostedServiceCreate",
            "HostedServiceDelete",
            "HostedServiceDeleteAll",
            "HostedServiceDeleteExtension",
            "HostedServiceGet",
            "HostedServiceGetDetailed",
            "HostedServiceGetExtension",
            "HostedServiceList",
            "HostedServiceListAvailableExtensions",
            "HostedServiceListExtensions",
            "HostedServiceListExtensionVersions",
            "HostedServiceUpdate",
            "LoadBalancerCreate",
            "LoadBalancerDelete",
            "LoadBalancerUpdate",
            "OperatingSystemList",
            "OperatingSystemListFamilies",
            "ServiceCertificateCreate",
            "ServiceCertificateDelete",
            "ServiceCertificateGet",
            "ServiceCertificateList",
            "VirtualMachineDiskCreateDataDisk",
            "VirtualMachineDiskCreateDisk",
            "VirtualMachineDiskDeleteDataDisk",
            "VirtualMachineDiskDeleteDisk",
            "VirtualMachineDiskGetDataDisk",
            "VirtualMachineDiskGetDisk",
            "VirtualMachineDiskListDisks",
            "VirtualMachineDiskUpdateDataDisk",
            "VirtualMachineDiskUpdateDisk",
            "VirtualMachineDiskUpdateDiskSize",
            "VirtualMachineExtensionList",
            "VirtualMachineExtensionListVersions",
            "VirtualMachineCaptureOSImage",
            "VirtualMachineCaptureVMImage",
            "VirtualMachineCreate",
            "VirtualMachineCreateDeployment",
            "VirtualMachineDelete",
            "VirtualMachineGet",
            "VirtualMachineGetRemoteDesktopFile",
            "VirtualMachineRestart",
            "VirtualMachineShutdown",
            "VirtualMachineShutdownRoles",
            "VirtualMachineStart",
            "VirtualMachineStartRoles",
            "VirtualMachineUpdate",
            "VirtualMachineUpdateLoadBalancedEndpointSet",
            "VirtualMachineOSImageCreate",
            "VirtualMachineOSImageDelete",
            "VirtualMachineOSImageGet",
            "VirtualMachineOSImageGetDetails",
            "VirtualMachineOSImageList",
            "VirtualMachineOSImageReplicate",
            "VirtualMachineOSImageShare",
            "VirtualMachineOSImageUnreplicate",
            "VirtualMachineOSImageUpdate",
            "VirtualMachineVMImageCreate",
            "VirtualMachineVMImageDelete",
            "VirtualMachineVMImageGetDetails",
            "VirtualMachineVMImageList",
            "VirtualMachineVMImageReplicate",
            "VirtualMachineVMImageShare",
            "VirtualMachineVMImageUnreplicate",
            "VirtualMachineVMImageUpdate"
        )]
        public string MethodName { get; set; }

        public override void ExecuteCmdlet()
        {
            base.ExecuteCmdlet();
            ExecuteClientAction(() =>
            {
                if (ParameterSetName == "CreateParameterListByMethodName")
                {
                    switch (MethodName)
                    {
                        case "DeploymentChangeConfigurationByName" : WriteObject(CreateDeploymentChangeConfigurationByNameParameters()); break;
                        case "DeploymentChangeConfigurationBySlot" : WriteObject(CreateDeploymentChangeConfigurationBySlotParameters()); break;
                        case "DeploymentCreate" : WriteObject(CreateDeploymentCreateParameters()); break;
                        case "DeploymentDeleteByName" : WriteObject(CreateDeploymentDeleteByNameParameters()); break;
                        case "DeploymentDeleteBySlot" : WriteObject(CreateDeploymentDeleteBySlotParameters()); break;
                        case "DeploymentDeleteRoleInstanceByDeploymentName" : WriteObject(CreateDeploymentDeleteRoleInstanceByDeploymentNameParameters()); break;
                        case "DeploymentDeleteRoleInstanceByDeploymentSlot" : WriteObject(CreateDeploymentDeleteRoleInstanceByDeploymentSlotParameters()); break;
                        case "DeploymentGetByName" : WriteObject(CreateDeploymentGetByNameParameters()); break;
                        case "DeploymentGetBySlot" : WriteObject(CreateDeploymentGetBySlotParameters()); break;
                        case "DeploymentGetPackageByName" : WriteObject(CreateDeploymentGetPackageByNameParameters()); break;
                        case "DeploymentGetPackageBySlot" : WriteObject(CreateDeploymentGetPackageBySlotParameters()); break;
                        case "DeploymentListEvents" : WriteObject(CreateDeploymentListEventsParameters()); break;
                        case "DeploymentListEventsBySlot" : WriteObject(CreateDeploymentListEventsBySlotParameters()); break;
                        case "DeploymentRebootRoleInstanceByDeploymentName" : WriteObject(CreateDeploymentRebootRoleInstanceByDeploymentNameParameters()); break;
                        case "DeploymentRebootRoleInstanceByDeploymentSlot" : WriteObject(CreateDeploymentRebootRoleInstanceByDeploymentSlotParameters()); break;
                        case "DeploymentRebuildRoleInstanceByDeploymentName" : WriteObject(CreateDeploymentRebuildRoleInstanceByDeploymentNameParameters()); break;
                        case "DeploymentRebuildRoleInstanceByDeploymentSlot" : WriteObject(CreateDeploymentRebuildRoleInstanceByDeploymentSlotParameters()); break;
                        case "DeploymentReimageRoleInstanceByDeploymentName" : WriteObject(CreateDeploymentReimageRoleInstanceByDeploymentNameParameters()); break;
                        case "DeploymentReimageRoleInstanceByDeploymentSlot" : WriteObject(CreateDeploymentReimageRoleInstanceByDeploymentSlotParameters()); break;
                        case "DeploymentRollbackUpdateOrUpgradeByDeploymentName" : WriteObject(CreateDeploymentRollbackUpdateOrUpgradeByDeploymentNameParameters()); break;
                        case "DeploymentRollbackUpdateOrUpgradeByDeploymentSlot" : WriteObject(CreateDeploymentRollbackUpdateOrUpgradeByDeploymentSlotParameters()); break;
                        case "DeploymentSwap" : WriteObject(CreateDeploymentSwapParameters()); break;
                        case "DeploymentUpdateStatusByDeploymentName" : WriteObject(CreateDeploymentUpdateStatusByDeploymentNameParameters()); break;
                        case "DeploymentUpdateStatusByDeploymentSlot" : WriteObject(CreateDeploymentUpdateStatusByDeploymentSlotParameters()); break;
                        case "DeploymentUpgradeByName" : WriteObject(CreateDeploymentUpgradeByNameParameters()); break;
                        case "DeploymentUpgradeBySlot" : WriteObject(CreateDeploymentUpgradeBySlotParameters()); break;
                        case "DeploymentWalkUpgradeDomainByDeploymentName" : WriteObject(CreateDeploymentWalkUpgradeDomainByDeploymentNameParameters()); break;
                        case "DeploymentWalkUpgradeDomainByDeploymentSlot" : WriteObject(CreateDeploymentWalkUpgradeDomainByDeploymentSlotParameters()); break;
                        case "DNSServerAddDNSServer" : WriteObject(CreateDNSServerAddDNSServerParameters()); break;
                        case "DNSServerDeleteDNSServer" : WriteObject(CreateDNSServerDeleteDNSServerParameters()); break;
                        case "DNSServerUpdateDNSServer" : WriteObject(CreateDNSServerUpdateDNSServerParameters()); break;
                        case "ExtensionImageRegister" : WriteObject(CreateExtensionImageRegisterParameters()); break;
                        case "ExtensionImageUnregister" : WriteObject(CreateExtensionImageUnregisterParameters()); break;
                        case "ExtensionImageUpdate" : WriteObject(CreateExtensionImageUpdateParameters()); break;
                        case "HostedServiceAddExtension" : WriteObject(CreateHostedServiceAddExtensionParameters()); break;
                        case "HostedServiceCheckNameAvailability" : WriteObject(CreateHostedServiceCheckNameAvailabilityParameters()); break;
                        case "HostedServiceCreate" : WriteObject(CreateHostedServiceCreateParameters()); break;
                        case "HostedServiceDelete" : WriteObject(CreateHostedServiceDeleteParameters()); break;
                        case "HostedServiceDeleteAll" : WriteObject(CreateHostedServiceDeleteAllParameters()); break;
                        case "HostedServiceDeleteExtension" : WriteObject(CreateHostedServiceDeleteExtensionParameters()); break;
                        case "HostedServiceGet" : WriteObject(CreateHostedServiceGetParameters()); break;
                        case "HostedServiceGetDetailed" : WriteObject(CreateHostedServiceGetDetailedParameters()); break;
                        case "HostedServiceGetExtension" : WriteObject(CreateHostedServiceGetExtensionParameters()); break;
                        case "HostedServiceList" : WriteObject(CreateHostedServiceListParameters()); break;
                        case "HostedServiceListAvailableExtensions" : WriteObject(CreateHostedServiceListAvailableExtensionsParameters()); break;
                        case "HostedServiceListExtensions" : WriteObject(CreateHostedServiceListExtensionsParameters()); break;
                        case "HostedServiceListExtensionVersions" : WriteObject(CreateHostedServiceListExtensionVersionsParameters()); break;
                        case "HostedServiceUpdate" : WriteObject(CreateHostedServiceUpdateParameters()); break;
                        case "LoadBalancerCreate" : WriteObject(CreateLoadBalancerCreateParameters()); break;
                        case "LoadBalancerDelete" : WriteObject(CreateLoadBalancerDeleteParameters()); break;
                        case "LoadBalancerUpdate" : WriteObject(CreateLoadBalancerUpdateParameters()); break;
                        case "OperatingSystemList" : WriteObject(CreateOperatingSystemListParameters()); break;
                        case "OperatingSystemListFamilies" : WriteObject(CreateOperatingSystemListFamiliesParameters()); break;
                        case "ServiceCertificateCreate" : WriteObject(CreateServiceCertificateCreateParameters()); break;
                        case "ServiceCertificateDelete" : WriteObject(CreateServiceCertificateDeleteParameters()); break;
                        case "ServiceCertificateGet" : WriteObject(CreateServiceCertificateGetParameters()); break;
                        case "ServiceCertificateList" : WriteObject(CreateServiceCertificateListParameters()); break;
                        case "VirtualMachineDiskCreateDataDisk" : WriteObject(CreateVirtualMachineDiskCreateDataDiskParameters()); break;
                        case "VirtualMachineDiskCreateDisk" : WriteObject(CreateVirtualMachineDiskCreateDiskParameters()); break;
                        case "VirtualMachineDiskDeleteDataDisk" : WriteObject(CreateVirtualMachineDiskDeleteDataDiskParameters()); break;
                        case "VirtualMachineDiskDeleteDisk" : WriteObject(CreateVirtualMachineDiskDeleteDiskParameters()); break;
                        case "VirtualMachineDiskGetDataDisk" : WriteObject(CreateVirtualMachineDiskGetDataDiskParameters()); break;
                        case "VirtualMachineDiskGetDisk" : WriteObject(CreateVirtualMachineDiskGetDiskParameters()); break;
                        case "VirtualMachineDiskListDisks" : WriteObject(CreateVirtualMachineDiskListDisksParameters()); break;
                        case "VirtualMachineDiskUpdateDataDisk" : WriteObject(CreateVirtualMachineDiskUpdateDataDiskParameters()); break;
                        case "VirtualMachineDiskUpdateDisk" : WriteObject(CreateVirtualMachineDiskUpdateDiskParameters()); break;
                        case "VirtualMachineDiskUpdateDiskSize" : WriteObject(CreateVirtualMachineDiskUpdateDiskSizeParameters()); break;
                        case "VirtualMachineExtensionList" : WriteObject(CreateVirtualMachineExtensionListParameters()); break;
                        case "VirtualMachineExtensionListVersions" : WriteObject(CreateVirtualMachineExtensionListVersionsParameters()); break;
                        case "VirtualMachineCaptureOSImage" : WriteObject(CreateVirtualMachineCaptureOSImageParameters()); break;
                        case "VirtualMachineCaptureVMImage" : WriteObject(CreateVirtualMachineCaptureVMImageParameters()); break;
                        case "VirtualMachineCreate" : WriteObject(CreateVirtualMachineCreateParameters()); break;
                        case "VirtualMachineCreateDeployment" : WriteObject(CreateVirtualMachineCreateDeploymentParameters()); break;
                        case "VirtualMachineDelete" : WriteObject(CreateVirtualMachineDeleteParameters()); break;
                        case "VirtualMachineGet" : WriteObject(CreateVirtualMachineGetParameters()); break;
                        case "VirtualMachineGetRemoteDesktopFile" : WriteObject(CreateVirtualMachineGetRemoteDesktopFileParameters()); break;
                        case "VirtualMachineRestart" : WriteObject(CreateVirtualMachineRestartParameters()); break;
                        case "VirtualMachineShutdown" : WriteObject(CreateVirtualMachineShutdownParameters()); break;
                        case "VirtualMachineShutdownRoles" : WriteObject(CreateVirtualMachineShutdownRolesParameters()); break;
                        case "VirtualMachineStart" : WriteObject(CreateVirtualMachineStartParameters()); break;
                        case "VirtualMachineStartRoles" : WriteObject(CreateVirtualMachineStartRolesParameters()); break;
                        case "VirtualMachineUpdate" : WriteObject(CreateVirtualMachineUpdateParameters()); break;
                        case "VirtualMachineUpdateLoadBalancedEndpointSet" : WriteObject(CreateVirtualMachineUpdateLoadBalancedEndpointSetParameters()); break;
                        case "VirtualMachineOSImageCreate" : WriteObject(CreateVirtualMachineOSImageCreateParameters()); break;
                        case "VirtualMachineOSImageDelete" : WriteObject(CreateVirtualMachineOSImageDeleteParameters()); break;
                        case "VirtualMachineOSImageGet" : WriteObject(CreateVirtualMachineOSImageGetParameters()); break;
                        case "VirtualMachineOSImageGetDetails" : WriteObject(CreateVirtualMachineOSImageGetDetailsParameters()); break;
                        case "VirtualMachineOSImageList" : WriteObject(CreateVirtualMachineOSImageListParameters()); break;
                        case "VirtualMachineOSImageReplicate" : WriteObject(CreateVirtualMachineOSImageReplicateParameters()); break;
                        case "VirtualMachineOSImageShare" : WriteObject(CreateVirtualMachineOSImageShareParameters()); break;
                        case "VirtualMachineOSImageUnreplicate" : WriteObject(CreateVirtualMachineOSImageUnreplicateParameters()); break;
                        case "VirtualMachineOSImageUpdate" : WriteObject(CreateVirtualMachineOSImageUpdateParameters()); break;
                        case "VirtualMachineVMImageCreate" : WriteObject(CreateVirtualMachineVMImageCreateParameters()); break;
                        case "VirtualMachineVMImageDelete" : WriteObject(CreateVirtualMachineVMImageDeleteParameters()); break;
                        case "VirtualMachineVMImageGetDetails" : WriteObject(CreateVirtualMachineVMImageGetDetailsParameters()); break;
                        case "VirtualMachineVMImageList" : WriteObject(CreateVirtualMachineVMImageListParameters()); break;
                        case "VirtualMachineVMImageReplicate" : WriteObject(CreateVirtualMachineVMImageReplicateParameters()); break;
                        case "VirtualMachineVMImageShare" : WriteObject(CreateVirtualMachineVMImageShareParameters()); break;
                        case "VirtualMachineVMImageUnreplicate" : WriteObject(CreateVirtualMachineVMImageUnreplicateParameters()); break;
                        case "VirtualMachineVMImageUpdate" : WriteObject(CreateVirtualMachineVMImageUpdateParameters()); break;
                        default : WriteWarning("Cannot find the method by name = '" + MethodName + "'."); break;
                    }
                }
            });
        }

    }
}
