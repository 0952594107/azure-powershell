//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Azure.Commands.RecoveryServices.Backup.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Azure.Commands.RecoveryServices.Backup.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handling aggregate exception.
        /// </summary>
        public static string AggregateException {
            get {
                return ResourceManager.GetString("AggregateException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received ArgumentException.
        /// </summary>
        public static string ArgumentException {
            get {
                return ResourceManager.GetString("ArgumentException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BackupManagementType value should be empty or AzureVM for WorkloadType=AzureVM.
        /// </summary>
        public static string AzureVMUnsupportedBackupManagementTypeException {
            get {
                return ResourceManager.GetString("AzureVMUnsupportedBackupManagementTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both RetentionPolicy and SchedulePolicy are empty, nothing to update.
        /// </summary>
        public static string BothRetentionAndSchedulePoliciesEmpty {
            get {
                return ResourceManager.GetString("BothRetentionAndSchedulePoliciesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received CloudException, ErrorCode: {0}, Message: {1}.
        /// </summary>
        public static string CloudException {
            get {
                return ResourceManager.GetString("CloudException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received CloudException, StatusCode: {0}.
        /// </summary>
        public static string CloudExceptionCodeNotFound {
            get {
                return ResourceManager.GetString("CloudExceptionCodeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DaysOfWeek specified in a weekly retention schedule should be same as of DaysOfWeek value specified in the backup schedule.
        /// </summary>
        public static string DaysofTheWeekInWeeklyRetentionException {
            get {
                return ResourceManager.GetString("DaysofTheWeekInWeeklyRetentionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Caught exception, type: {0}.
        /// </summary>
        public static string ExceptionInExecution {
            get {
                return ResourceManager.GetString("ExceptionInExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DaysOfWeek specified for monthly and yearly retention policies should be a subset of the DaysOfWeek value specified in the backup schedule.
        /// </summary>
        public static string MonthlyYearlyRetentionDaysOfWeekException {
            get {
                return ResourceManager.GetString("MonthlyYearlyRetentionDaysOfWeekException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A protection policy with the specified name already exists: {0}.
        /// </summary>
        public static string PolicyAlreadyExist {
            get {
                return ResourceManager.GetString("PolicyAlreadyExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection Policy not found with name: {0}.
        /// </summary>
        public static string PolicyNotFound {
            get {
                return ResourceManager.GetString("PolicyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The protection policy name should contain alphanumeric characters and cannot start with a number.
        /// </summary>
        public static string ProtectionPolicyNameException {
            get {
                return ResourceManager.GetString("ProtectionPolicyNameException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The protection policy name must contain between 3 and 150 characters.
        /// </summary>
        public static string ProtectionPolicyNameLengthException {
            get {
                return ResourceManager.GetString("ProtectionPolicyNameLengthException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified resource does not exist.
        /// </summary>
        public static string ResourceNotFoundMessage {
            get {
                return ResourceManager.GetString("ResourceNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RecoveryServicesBackupVault.Name.
        /// </summary>
        public static string RsVaultResNameNullOrEmpty {
            get {
                return ResourceManager.GetString("RsVaultResNameNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RecoveryServicesBackupVault.ResourceGroupName.
        /// </summary>
        public static string RsVaultRGNameNullOrEmpty {
            get {
                return ResourceManager.GetString("RsVaultRGNameNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported combination for WorkloadType: {0}, BackupManagementType:{1}.
        /// </summary>
        public static string UnsupportedWorkloadBackupManagementTypeException {
            get {
                return ResourceManager.GetString("UnsupportedWorkloadBackupManagementTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported WorkloadType: {0}.
        /// </summary>
        public static string UnsupportedWorkloadTypeException {
            get {
                return ResourceManager.GetString("UnsupportedWorkloadTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received WebException, Response: {0}, Status: {1}.
        /// </summary>
        public static string WebException {
            get {
                return ResourceManager.GetString("WebException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For a weekly retention policy, using the DaysOfWeek parameter is mandatory.
        /// </summary>
        public static string WeeklyRetentionPolicyDaysOfWeekException {
            get {
                return ResourceManager.GetString("WeeklyRetentionPolicyDaysOfWeekException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For a weekly backup schedule, setting a weekly retention policy is mandatory.
        /// </summary>
        public static string WeeklyScheduleException {
            get {
                return ResourceManager.GetString("WeeklyScheduleException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For a weekly backup schedule, using the DaysOfWeek parameter is mandatory.
        /// </summary>
        public static string WeeklyScheduleRunDaysException {
            get {
                return ResourceManager.GetString("WeeklyScheduleRunDaysException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For a weekly backup schedule, setting a daily retention policy is not allowed.
        /// </summary>
        public static string WeeklyScheduleWithDailyException {
            get {
                return ResourceManager.GetString("WeeklyScheduleWithDailyException", resourceCulture);
            }
        }
    }
}
