// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PolicyInsights_2018_04_04
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// PolicyStates operations.
    /// </summary>
    public partial interface IPolicyStates
    {
        /// <summary>
        /// Queries policy states for the resources under the management group.
        /// </summary>
        /// <param name='policyStatesResource'>
        /// The virtual resource under PolicyStates resource type. In a given
        /// time range, 'latest' represents the latest policy state(s), whereas
        /// 'default' represents all policy state(s). Possible values include:
        /// 'default', 'latest'
        /// </param>
        /// <param name='managementGroupName'>
        /// Management group name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<PolicyStatesQueryResults>> ListQueryResultsForManagementGroupWithHttpMessagesAsync(string policyStatesResource, string managementGroupName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Summarizes policy states for the resources under the management
        /// group.
        /// </summary>
        /// <param name='managementGroupName'>
        /// Management group name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<SummarizeResults>> SummarizeForManagementGroupWithHttpMessagesAsync(string managementGroupName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries policy states for the resources under the subscription.
        /// </summary>
        /// <param name='policyStatesResource'>
        /// The virtual resource under PolicyStates resource type. In a given
        /// time range, 'latest' represents the latest policy state(s), whereas
        /// 'default' represents all policy state(s). Possible values include:
        /// 'default', 'latest'
        /// </param>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<PolicyStatesQueryResults>> ListQueryResultsForSubscriptionWithHttpMessagesAsync(string policyStatesResource, string subscriptionId, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Summarizes policy states for the resources under the subscription.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<SummarizeResults>> SummarizeForSubscriptionWithHttpMessagesAsync(string subscriptionId, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries policy states for the resources under the resource group.
        /// </summary>
        /// <param name='policyStatesResource'>
        /// The virtual resource under PolicyStates resource type. In a given
        /// time range, 'latest' represents the latest policy state(s), whereas
        /// 'default' represents all policy state(s). Possible values include:
        /// 'default', 'latest'
        /// </param>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<PolicyStatesQueryResults>> ListQueryResultsForResourceGroupWithHttpMessagesAsync(string policyStatesResource, string subscriptionId, string resourceGroupName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Summarizes policy states for the resources under the resource
        /// group.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<SummarizeResults>> SummarizeForResourceGroupWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries policy states for the resource.
        /// </summary>
        /// <param name='policyStatesResource'>
        /// The virtual resource under PolicyStates resource type. In a given
        /// time range, 'latest' represents the latest policy state(s), whereas
        /// 'default' represents all policy state(s). Possible values include:
        /// 'default', 'latest'
        /// </param>
        /// <param name='resourceId'>
        /// Resource ID.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<PolicyStatesQueryResults>> ListQueryResultsForResourceWithHttpMessagesAsync(string policyStatesResource, string resourceId, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Summarizes policy states for the resource.
        /// </summary>
        /// <param name='resourceId'>
        /// Resource ID.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<SummarizeResults>> SummarizeForResourceWithHttpMessagesAsync(string resourceId, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries policy states for the subscription level policy set
        /// definition.
        /// </summary>
        /// <param name='policyStatesResource'>
        /// The virtual resource under PolicyStates resource type. In a given
        /// time range, 'latest' represents the latest policy state(s), whereas
        /// 'default' represents all policy state(s). Possible values include:
        /// 'default', 'latest'
        /// </param>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='policySetDefinitionName'>
        /// Policy set definition name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<PolicyStatesQueryResults>> ListQueryResultsForPolicySetDefinitionWithHttpMessagesAsync(string policyStatesResource, string subscriptionId, string policySetDefinitionName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Summarizes policy states for the subscription level policy set
        /// definition.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='policySetDefinitionName'>
        /// Policy set definition name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<SummarizeResults>> SummarizeForPolicySetDefinitionWithHttpMessagesAsync(string subscriptionId, string policySetDefinitionName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries policy states for the subscription level policy definition.
        /// </summary>
        /// <param name='policyStatesResource'>
        /// The virtual resource under PolicyStates resource type. In a given
        /// time range, 'latest' represents the latest policy state(s), whereas
        /// 'default' represents all policy state(s). Possible values include:
        /// 'default', 'latest'
        /// </param>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='policyDefinitionName'>
        /// Policy definition name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<PolicyStatesQueryResults>> ListQueryResultsForPolicyDefinitionWithHttpMessagesAsync(string policyStatesResource, string subscriptionId, string policyDefinitionName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Summarizes policy states for the subscription level policy
        /// definition.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='policyDefinitionName'>
        /// Policy definition name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<SummarizeResults>> SummarizeForPolicyDefinitionWithHttpMessagesAsync(string subscriptionId, string policyDefinitionName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries policy states for the subscription level policy assignment.
        /// </summary>
        /// <param name='policyStatesResource'>
        /// The virtual resource under PolicyStates resource type. In a given
        /// time range, 'latest' represents the latest policy state(s), whereas
        /// 'default' represents all policy state(s). Possible values include:
        /// 'default', 'latest'
        /// </param>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='policyAssignmentName'>
        /// Policy assignment name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<PolicyStatesQueryResults>> ListQueryResultsForSubscriptionLevelPolicyAssignmentWithHttpMessagesAsync(string policyStatesResource, string subscriptionId, string policyAssignmentName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Summarizes policy states for the subscription level policy
        /// assignment.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='policyAssignmentName'>
        /// Policy assignment name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<SummarizeResults>> SummarizeForSubscriptionLevelPolicyAssignmentWithHttpMessagesAsync(string subscriptionId, string policyAssignmentName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries policy states for the resource group level policy
        /// assignment.
        /// </summary>
        /// <param name='policyStatesResource'>
        /// The virtual resource under PolicyStates resource type. In a given
        /// time range, 'latest' represents the latest policy state(s), whereas
        /// 'default' represents all policy state(s). Possible values include:
        /// 'default', 'latest'
        /// </param>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name.
        /// </param>
        /// <param name='policyAssignmentName'>
        /// Policy assignment name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<PolicyStatesQueryResults>> ListQueryResultsForResourceGroupLevelPolicyAssignmentWithHttpMessagesAsync(string policyStatesResource, string subscriptionId, string resourceGroupName, string policyAssignmentName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Summarizes policy states for the resource group level policy
        /// assignment.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Microsoft Azure subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name.
        /// </param>
        /// <param name='policyAssignmentName'>
        /// Policy assignment name.
        /// </param>
        /// <param name='queryOptions'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<SummarizeResults>> SummarizeForResourceGroupLevelPolicyAssignmentWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string policyAssignmentName, QueryOptions queryOptions = default(QueryOptions), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets OData metadata XML document.
        /// </summary>
        /// <param name='scope'>
        /// A valid scope, i.e. management group, subscription, resource group,
        /// or resource ID. Scope used has no effect on metadata returned.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="QueryFailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<string>> GetMetadataWithHttpMessagesAsync(string scope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
