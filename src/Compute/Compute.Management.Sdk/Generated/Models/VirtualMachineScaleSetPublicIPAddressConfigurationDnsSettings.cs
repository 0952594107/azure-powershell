// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes a virtual machines scale sets network configuration&#39;s DNS
    /// settings.
    /// </summary>
    public partial class VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings class.
        /// </summary>
        public VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings class.
        /// </summary>

        /// <param name="domainNameLabel">The Domain name label.The concatenation of the domain name label and vm
        /// index will be the domain name labels of the PublicIPAddress resources that
        /// will be created
        /// </param>

        /// <param name="domainNameLabelScope">The Domain name label scope.The concatenation of the hashed domain name
        /// label that generated according to the policy from domain name label scope
        /// and vm index will be the domain name labels of the PublicIPAddress
        /// resources that will be created
        /// Possible values include: &#39;TenantReuse&#39;, &#39;SubscriptionReuse&#39;,
        /// &#39;ResourceGroupReuse&#39;, &#39;NoReuse&#39;</param>
        public VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings(string domainNameLabel, string domainNameLabelScope = default(string))

        {
            this.DomainNameLabel = domainNameLabel;
            this.DomainNameLabelScope = domainNameLabelScope;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the Domain name label.The concatenation of the domain name
        /// label and vm index will be the domain name labels of the PublicIPAddress
        /// resources that will be created
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "domainNameLabel")]
        public string DomainNameLabel {get; set; }

        /// <summary>
        /// Gets or sets the Domain name label scope.The concatenation of the hashed
        /// domain name label that generated according to the policy from domain name
        /// label scope and vm index will be the domain name labels of the
        /// PublicIPAddress resources that will be created Possible values include: &#39;TenantReuse&#39;, &#39;SubscriptionReuse&#39;, &#39;ResourceGroupReuse&#39;, &#39;NoReuse&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "domainNameLabelScope")]
        public string DomainNameLabelScope {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.DomainNameLabel == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DomainNameLabel");
            }


        }
    }
}