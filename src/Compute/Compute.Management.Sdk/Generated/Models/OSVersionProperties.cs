// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// OS version properties.
    /// </summary>
    public partial class OSVersionProperties
    {
        /// <summary>
        /// Initializes a new instance of the OSVersionProperties class.
        /// </summary>
        public OSVersionProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OSVersionProperties class.
        /// </summary>

        /// <param name="family">The family of this OS version.
        /// </param>

        /// <param name="familyLabel">The family label of this OS version.
        /// </param>

        /// <param name="version">The OS version.
        /// </param>

        /// <param name="label">The OS version label.
        /// </param>

        /// <param name="isDefault">Specifies whether this is the default OS version for its family.
        /// </param>

        /// <param name="isActive">Specifies whether this OS version is active.
        /// </param>
        public OSVersionProperties(string family = default(string), string familyLabel = default(string), string version = default(string), string label = default(string), bool? isDefault = default(bool?), bool? isActive = default(bool?))

        {
            this.Family = family;
            this.FamilyLabel = familyLabel;
            this.Version = version;
            this.Label = label;
            this.IsDefault = isDefault;
            this.IsActive = isActive;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the family of this OS version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "family")]
        public string Family {get; private set; }

        /// <summary>
        /// Gets the family label of this OS version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "familyLabel")]
        public string FamilyLabel {get; private set; }

        /// <summary>
        /// Gets the OS version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "version")]
        public string Version {get; private set; }

        /// <summary>
        /// Gets the OS version label.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "label")]
        public string Label {get; private set; }

        /// <summary>
        /// Gets specifies whether this is the default OS version for its family.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isDefault")]
        public bool? IsDefault {get; private set; }

        /// <summary>
        /// Gets specifies whether this OS version is active.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isActive")]
        public bool? IsActive {get; private set; }
    }
}