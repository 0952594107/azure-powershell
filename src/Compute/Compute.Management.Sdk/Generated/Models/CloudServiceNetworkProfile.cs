// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Network Profile for the cloud service.
    /// </summary>
    public partial class CloudServiceNetworkProfile
    {
        /// <summary>
        /// Initializes a new instance of the CloudServiceNetworkProfile class.
        /// </summary>
        public CloudServiceNetworkProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CloudServiceNetworkProfile class.
        /// </summary>

        /// <param name="loadBalancerConfigurations">List of Load balancer configurations. Cloud service can have up to two load
        /// balancer configurations, corresponding to a Public Load Balancer and an
        /// Internal Load Balancer.
        /// </param>

        /// <param name="slotType">Slot type for the cloud service.
        /// Possible values are &lt;br /&gt;&lt;br /&gt;**Production**&lt;br /&gt;&lt;br /&gt;**Staging**&lt;br
        /// /&gt;&lt;br /&gt;
        /// If not specified, the default value is Production.
        /// Possible values include: &#39;Production&#39;, &#39;Staging&#39;</param>

        /// <param name="swappableCloudService">The id reference of the cloud service containing the target IP with which
        /// the subject cloud service can perform a swap. This property cannot be
        /// updated once it is set. The swappable cloud service referred by this id
        /// must be present otherwise an error will be thrown.
        /// </param>
        public CloudServiceNetworkProfile(System.Collections.Generic.IList<LoadBalancerConfiguration> loadBalancerConfigurations = default(System.Collections.Generic.IList<LoadBalancerConfiguration>), string slotType = default(string), SubResource swappableCloudService = default(SubResource))

        {
            this.LoadBalancerConfigurations = loadBalancerConfigurations;
            this.SlotType = slotType;
            this.SwappableCloudService = swappableCloudService;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets list of Load balancer configurations. Cloud service can have
        /// up to two load balancer configurations, corresponding to a Public Load
        /// Balancer and an Internal Load Balancer.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "loadBalancerConfigurations")]
        public System.Collections.Generic.IList<LoadBalancerConfiguration> LoadBalancerConfigurations {get; set; }

        /// <summary>
        /// Gets or sets slot type for the cloud service.
        /// Possible values are &lt;br /&gt;&lt;br /&gt;**Production**&lt;br /&gt;&lt;br /&gt;**Staging**&lt;br
        /// /&gt;&lt;br /&gt;
        /// If not specified, the default value is Production. Possible values include: &#39;Production&#39;, &#39;Staging&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "slotType")]
        public string SlotType {get; set; }

        /// <summary>
        /// Gets or sets the id reference of the cloud service containing the target IP
        /// with which the subject cloud service can perform a swap. This property
        /// cannot be updated once it is set. The swappable cloud service referred by
        /// this id must be present otherwise an error will be thrown.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "swappableCloudService")]
        public SubResource SwappableCloudService {get; set; }
    }
}