// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes the properties of a virtual machine scale set virtual machine.
    /// </summary>
    public partial class VirtualMachineScaleSetVMProperties
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineScaleSetVMProperties class.
        /// </summary>
        public VirtualMachineScaleSetVMProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineScaleSetVMProperties class.
        /// </summary>

        /// <param name="latestModelApplied">Specifies whether the latest model has been applied to the virtual machine.
        /// </param>

        /// <param name="vmId">Azure VM unique ID.
        /// </param>

        /// <param name="instanceView">The virtual machine instance view.
        /// </param>

        /// <param name="hardwareProfile">Specifies the hardware settings for the virtual machine.
        /// </param>

        /// <param name="storageProfile">Specifies the storage settings for the virtual machine disks.
        /// </param>

        /// <param name="additionalCapabilities">Specifies additional capabilities enabled or disabled on the virtual
        /// machine in the scale set. For instance: whether the virtual machine has the
        /// capability to support attaching managed data disks with UltraSSD_LRS
        /// storage account type.
        /// </param>

        /// <param name="osProfile">Specifies the operating system settings for the virtual machine.
        /// </param>

        /// <param name="securityProfile">Specifies the Security related profile settings for the virtual machine.
        /// </param>

        /// <param name="networkProfile">Specifies the network interfaces of the virtual machine.
        /// </param>

        /// <param name="networkProfileConfiguration">Specifies the network profile configuration of the virtual machine.
        /// </param>

        /// <param name="diagnosticsProfile">Specifies the boot diagnostic settings state. Minimum api-version:
        /// 2015-06-15.
        /// </param>

        /// <param name="availabilitySet">Specifies information about the availability set that the virtual machine
        /// should be assigned to. Virtual machines specified in the same availability
        /// set are allocated to different nodes to maximize availability. For more
        /// information about availability sets, see [Availability sets
        /// overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview).
        /// For more information on Azure planned maintenance, see [Maintenance and
        /// updates for Virtual Machines in
        /// Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates).
        /// Currently, a VM can only be added to availability set at creation time. An
        /// existing VM cannot be added to an availability set.
        /// </param>

        /// <param name="provisioningState">The provisioning state, which only appears in the response.
        /// </param>

        /// <param name="licenseType">Specifies that the image or disk that is being used was licensed
        /// on-premises. &lt;br&gt;&lt;br&gt; Possible values for Windows Server operating system
        /// are: &lt;br&gt;&lt;br&gt; Windows_Client &lt;br&gt;&lt;br&gt; Windows_Server &lt;br&gt;&lt;br&gt; Possible
        /// values for Linux Server operating system are: &lt;br&gt;&lt;br&gt; RHEL_BYOS (for RHEL)
        /// &lt;br&gt;&lt;br&gt; SLES_BYOS (for SUSE) &lt;br&gt;&lt;br&gt; For more information, see [Azure
        /// Hybrid Use Benefit for Windows
        /// Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
        /// &lt;br&gt;&lt;br&gt; [Azure Hybrid Use Benefit for Linux
        /// Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
        /// &lt;br&gt;&lt;br&gt; Minimum api-version: 2015-06-15
        /// </param>

        /// <param name="modelDefinitionApplied">Specifies whether the model applied to the virtual machine is the model of
        /// the virtual machine scale set or the customized model for the virtual
        /// machine.
        /// </param>

        /// <param name="protectionPolicy">Specifies the protection policy of the virtual machine.
        /// </param>

        /// <param name="userData">UserData for the VM, which must be base-64 encoded. Customer should not
        /// pass any secrets in here. &lt;br&gt;&lt;br&gt;Minimum api-version: 2021-03-01
        /// </param>

        /// <param name="timeCreated">Specifies the time at which the Virtual Machine resource was
        /// created.&lt;br&gt;&lt;br&gt;Minimum api-version: 2021-11-01.
        /// </param>
        public VirtualMachineScaleSetVMProperties(bool? latestModelApplied = default(bool?), string vmId = default(string), VirtualMachineScaleSetVMInstanceView instanceView = default(VirtualMachineScaleSetVMInstanceView), HardwareProfile hardwareProfile = default(HardwareProfile), StorageProfile storageProfile = default(StorageProfile), AdditionalCapabilities additionalCapabilities = default(AdditionalCapabilities), OSProfile osProfile = default(OSProfile), SecurityProfile securityProfile = default(SecurityProfile), NetworkProfile networkProfile = default(NetworkProfile), VirtualMachineScaleSetVMNetworkProfileConfiguration networkProfileConfiguration = default(VirtualMachineScaleSetVMNetworkProfileConfiguration), DiagnosticsProfile diagnosticsProfile = default(DiagnosticsProfile), SubResource availabilitySet = default(SubResource), string provisioningState = default(string), string licenseType = default(string), string modelDefinitionApplied = default(string), VirtualMachineScaleSetVMProtectionPolicy protectionPolicy = default(VirtualMachineScaleSetVMProtectionPolicy), string userData = default(string), System.DateTime? timeCreated = default(System.DateTime?))

        {
            this.LatestModelApplied = latestModelApplied;
            this.VMId = vmId;
            this.InstanceView = instanceView;
            this.HardwareProfile = hardwareProfile;
            this.StorageProfile = storageProfile;
            this.AdditionalCapabilities = additionalCapabilities;
            this.OSProfile = osProfile;
            this.SecurityProfile = securityProfile;
            this.NetworkProfile = networkProfile;
            this.NetworkProfileConfiguration = networkProfileConfiguration;
            this.DiagnosticsProfile = diagnosticsProfile;
            this.AvailabilitySet = availabilitySet;
            this.ProvisioningState = provisioningState;
            this.LicenseType = licenseType;
            this.ModelDefinitionApplied = modelDefinitionApplied;
            this.ProtectionPolicy = protectionPolicy;
            this.UserData = userData;
            this.TimeCreated = timeCreated;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets specifies whether the latest model has been applied to the virtual
        /// machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "latestModelApplied")]
        public bool? LatestModelApplied {get; private set; }

        /// <summary>
        /// Gets azure VM unique ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmId")]
        public string VMId {get; private set; }

        /// <summary>
        /// Gets the virtual machine instance view.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "instanceView")]
        public VirtualMachineScaleSetVMInstanceView InstanceView {get; private set; }

        /// <summary>
        /// Gets or sets specifies the hardware settings for the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hardwareProfile")]
        public HardwareProfile HardwareProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies the storage settings for the virtual machine disks.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageProfile")]
        public StorageProfile StorageProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies additional capabilities enabled or disabled on the
        /// virtual machine in the scale set. For instance: whether the virtual machine
        /// has the capability to support attaching managed data disks with
        /// UltraSSD_LRS storage account type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "additionalCapabilities")]
        public AdditionalCapabilities AdditionalCapabilities {get; set; }

        /// <summary>
        /// Gets or sets specifies the operating system settings for the virtual
        /// machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osProfile")]
        public OSProfile OSProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies the Security related profile settings for the
        /// virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "securityProfile")]
        public SecurityProfile SecurityProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies the network interfaces of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkProfile")]
        public NetworkProfile NetworkProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies the network profile configuration of the virtual
        /// machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkProfileConfiguration")]
        public VirtualMachineScaleSetVMNetworkProfileConfiguration NetworkProfileConfiguration {get; set; }

        /// <summary>
        /// Gets or sets specifies the boot diagnostic settings state. Minimum
        /// api-version: 2015-06-15.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diagnosticsProfile")]
        public DiagnosticsProfile DiagnosticsProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies information about the availability set that the
        /// virtual machine should be assigned to. Virtual machines specified in the
        /// same availability set are allocated to different nodes to maximize
        /// availability. For more information about availability sets, see
        /// [Availability sets
        /// overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview).
        /// For more information on Azure planned maintenance, see [Maintenance and
        /// updates for Virtual Machines in
        /// Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates).
        /// Currently, a VM can only be added to availability set at creation time. An
        /// existing VM cannot be added to an availability set.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "availabilitySet")]
        public SubResource AvailabilitySet {get; set; }

        /// <summary>
        /// Gets the provisioning state, which only appears in the response.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets specifies that the image or disk that is being used was
        /// licensed on-premises. &lt;br&gt;&lt;br&gt; Possible values for Windows Server operating
        /// system are: &lt;br&gt;&lt;br&gt; Windows_Client &lt;br&gt;&lt;br&gt; Windows_Server &lt;br&gt;&lt;br&gt;
        /// Possible values for Linux Server operating system are: &lt;br&gt;&lt;br&gt; RHEL_BYOS
        /// (for RHEL) &lt;br&gt;&lt;br&gt; SLES_BYOS (for SUSE) &lt;br&gt;&lt;br&gt; For more information, see
        /// [Azure Hybrid Use Benefit for Windows
        /// Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
        /// &lt;br&gt;&lt;br&gt; [Azure Hybrid Use Benefit for Linux
        /// Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
        /// &lt;br&gt;&lt;br&gt; Minimum api-version: 2015-06-15
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "licenseType")]
        public string LicenseType {get; set; }

        /// <summary>
        /// Gets specifies whether the model applied to the virtual machine is the
        /// model of the virtual machine scale set or the customized model for the
        /// virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "modelDefinitionApplied")]
        public string ModelDefinitionApplied {get; private set; }

        /// <summary>
        /// Gets or sets specifies the protection policy of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protectionPolicy")]
        public VirtualMachineScaleSetVMProtectionPolicy ProtectionPolicy {get; set; }

        /// <summary>
        /// Gets or sets userData for the VM, which must be base-64 encoded. Customer
        /// should not pass any secrets in here. &lt;br&gt;&lt;br&gt;Minimum api-version:
        /// 2021-03-01
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userData")]
        public string UserData {get; set; }

        /// <summary>
        /// Gets specifies the time at which the Virtual Machine resource was
        /// created.&lt;br&gt;&lt;br&gt;Minimum api-version: 2021-11-01.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeCreated")]
        public System.DateTime? TimeCreated {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {



            if (this.StorageProfile != null)
            {
                this.StorageProfile.Validate();
            }












        }
    }
}