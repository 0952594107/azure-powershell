// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Capture Virtual Machine parameters.
    /// </summary>
    public partial class RunCommandInput
    {
        /// <summary>
        /// Initializes a new instance of the RunCommandInput class.
        /// </summary>
        public RunCommandInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RunCommandInput class.
        /// </summary>

        /// <param name="commandId">The run command id.
        /// </param>

        /// <param name="script">Optional. The script to be executed.  When this value is given, the given
        /// script will override the default script of the command.
        /// </param>

        /// <param name="parameters">The run command parameters.
        /// </param>
        public RunCommandInput(string commandId, System.Collections.Generic.IList<string> script = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<RunCommandInputParameter> parameters = default(System.Collections.Generic.IList<RunCommandInputParameter>))

        {
            this.CommandId = commandId;
            this.Script = script;
            this.Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the run command id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "commandId")]
        public string CommandId {get; set; }

        /// <summary>
        /// Gets or sets optional. The script to be executed.  When this value is
        /// given, the given script will override the default script of the command.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "script")]
        public System.Collections.Generic.IList<string> Script {get; set; }

        /// <summary>
        /// Gets or sets the run command parameters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IList<RunCommandInputParameter> Parameters {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.CommandId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "CommandId");
            }


            if (this.Parameters != null)
            {
                foreach (var element in this.Parameters)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}