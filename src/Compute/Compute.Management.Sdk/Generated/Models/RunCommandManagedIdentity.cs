// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Contains clientId or objectId (use only one, not both) of a user-assigned
    /// managed identity that has access to storage blob used in Run Command. Use
    /// an empty RunCommandManagedIdentity object in case of system-assigned
    /// identity. Make sure the Azure storage blob exists in case of scriptUri, and
    /// managed identity has been given access to blob&#39;s container with &#39;Storage
    /// Blob Data Reader&#39; role assignment with scriptUri blob and &#39;Storage Blob
    /// Data Contributor&#39; for Append blobs(outputBlobUri, errorBlobUri). In case of
    /// user assigned identity, make sure you add it under VM&#39;s identity. For more
    /// info on managed identity and Run Command, refer
    /// https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.
    /// </summary>
    public partial class RunCommandManagedIdentity
    {
        /// <summary>
        /// Initializes a new instance of the RunCommandManagedIdentity class.
        /// </summary>
        public RunCommandManagedIdentity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RunCommandManagedIdentity class.
        /// </summary>

        /// <param name="clientId">Client Id (GUID value) of the user-assigned managed identity. ObjectId
        /// should not be used if this is provided.
        /// </param>

        /// <param name="objectId">Object Id (GUID value) of the user-assigned managed identity. ClientId
        /// should not be used if this is provided.
        /// </param>
        public RunCommandManagedIdentity(string clientId = default(string), string objectId = default(string))

        {
            this.ClientId = clientId;
            this.ObjectId = objectId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets client Id (GUID value) of the user-assigned managed identity.
        /// ObjectId should not be used if this is provided.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "clientId")]
        public string ClientId {get; set; }

        /// <summary>
        /// Gets or sets object Id (GUID value) of the user-assigned managed identity.
        /// ClientId should not be used if this is provided.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "objectId")]
        public string ObjectId {get; set; }
    }
}