// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// The instance view of a virtual machine scale set.
    /// </summary>
    public partial class VirtualMachineScaleSetInstanceView
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineScaleSetInstanceView class.
        /// </summary>
        public VirtualMachineScaleSetInstanceView()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineScaleSetInstanceView class.
        /// </summary>

        /// <param name="virtualMachine">The instance view status summary for the virtual machine scale set.
        /// </param>

        /// <param name="extensions">The extensions information.
        /// </param>

        /// <param name="statuses">The resource status information.
        /// </param>

        /// <param name="orchestrationServices">The orchestration services information.
        /// </param>
        public VirtualMachineScaleSetInstanceView(VirtualMachineScaleSetInstanceViewStatusesSummary virtualMachine = default(VirtualMachineScaleSetInstanceViewStatusesSummary), System.Collections.Generic.IList<VirtualMachineScaleSetVMExtensionsSummary> extensions = default(System.Collections.Generic.IList<VirtualMachineScaleSetVMExtensionsSummary>), System.Collections.Generic.IList<InstanceViewStatus> statuses = default(System.Collections.Generic.IList<InstanceViewStatus>), System.Collections.Generic.IList<OrchestrationServiceSummary> orchestrationServices = default(System.Collections.Generic.IList<OrchestrationServiceSummary>))

        {
            this.VirtualMachine = virtualMachine;
            this.Extensions = extensions;
            this.Statuses = statuses;
            this.OrchestrationServices = orchestrationServices;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the instance view status summary for the virtual machine scale set.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualMachine")]
        public VirtualMachineScaleSetInstanceViewStatusesSummary VirtualMachine {get; private set; }

        /// <summary>
        /// Gets the extensions information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extensions")]
        public System.Collections.Generic.IList<VirtualMachineScaleSetVMExtensionsSummary> Extensions {get; private set; }

        /// <summary>
        /// Gets or sets the resource status information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "statuses")]
        public System.Collections.Generic.IList<InstanceViewStatus> Statuses {get; set; }

        /// <summary>
        /// Gets the orchestration services information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "orchestrationServices")]
        public System.Collections.Generic.IList<OrchestrationServiceSummary> OrchestrationServices {get; private set; }
    }
}