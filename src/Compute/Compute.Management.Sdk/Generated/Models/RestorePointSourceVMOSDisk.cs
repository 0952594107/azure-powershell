// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes an Operating System disk.
    /// </summary>
    public partial class RestorePointSourceVmosDisk
    {
        /// <summary>
        /// Initializes a new instance of the RestorePointSourceVmosDisk class.
        /// </summary>
        public RestorePointSourceVmosDisk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestorePointSourceVmosDisk class.
        /// </summary>

        /// <param name="osType">Gets the Operating System type.
        /// Possible values include: &#39;Windows&#39;, &#39;Linux&#39;</param>

        /// <param name="encryptionSettings">Gets the disk encryption settings.
        /// </param>

        /// <param name="name">Gets the disk name.
        /// </param>

        /// <param name="caching">Gets the caching type.
        /// Possible values include: &#39;None&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;</param>

        /// <param name="diskSizeGb">Gets the disk size in GB.
        /// </param>

        /// <param name="managedDisk">Gets the managed disk details
        /// </param>

        /// <param name="diskRestorePoint">Contains Disk Restore Point properties.
        /// </param>

        /// <param name="writeAcceleratorEnabled">Shows true if the disk is write-accelerator enabled.
        /// </param>
        public RestorePointSourceVmosDisk(string osType = default(string), DiskEncryptionSettings encryptionSettings = default(DiskEncryptionSettings), string name = default(string), CachingTypes? caching = default(CachingTypes?), int? diskSizeGb = default(int?), ManagedDiskParameters managedDisk = default(ManagedDiskParameters), DiskRestorePointAttributes diskRestorePoint = default(DiskRestorePointAttributes), bool? writeAcceleratorEnabled = default(bool?))

        {
            this.OSType = osType;
            this.EncryptionSettings = encryptionSettings;
            this.Name = name;
            this.Caching = caching;
            this.DiskSizeGb = diskSizeGb;
            this.ManagedDisk = managedDisk;
            this.DiskRestorePoint = diskRestorePoint;
            this.WriteAcceleratorEnabled = writeAcceleratorEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets gets the Operating System type. Possible values include: &#39;Windows&#39;, &#39;Linux&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osType")]
        public string OSType {get; private set; }

        /// <summary>
        /// Gets gets the disk encryption settings.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptionSettings")]
        public DiskEncryptionSettings EncryptionSettings {get; private set; }

        /// <summary>
        /// Gets gets the disk name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets gets the caching type. Possible values include: &#39;None&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "caching")]
        public CachingTypes? Caching {get; private set; }

        /// <summary>
        /// Gets gets the disk size in GB.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskSizeGB")]
        public int? DiskSizeGb {get; private set; }

        /// <summary>
        /// Gets or sets gets the managed disk details
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "managedDisk")]
        public ManagedDiskParameters ManagedDisk {get; set; }

        /// <summary>
        /// Gets or sets contains Disk Restore Point properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskRestorePoint")]
        public DiskRestorePointAttributes DiskRestorePoint {get; set; }

        /// <summary>
        /// Gets shows true if the disk is write-accelerator enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "writeAcceleratorEnabled")]
        public bool? WriteAcceleratorEnabled {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.EncryptionSettings != null)
            {
                this.EncryptionSettings.Validate();
            }




        }
    }
}