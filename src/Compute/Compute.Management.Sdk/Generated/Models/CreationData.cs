// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Data used when creating a disk.
    /// </summary>
    public partial class CreationData
    {
        /// <summary>
        /// Initializes a new instance of the CreationData class.
        /// </summary>
        public CreationData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreationData class.
        /// </summary>

        /// <param name="createOption">This enumerates the possible sources of a disk&#39;s creation.
        /// Possible values include: &#39;Empty&#39;, &#39;Attach&#39;, &#39;FromImage&#39;, &#39;Import&#39;, &#39;Copy&#39;,
        /// &#39;Restore&#39;, &#39;Upload&#39;, &#39;CopyStart&#39;, &#39;ImportSecure&#39;, &#39;UploadPreparedSecure&#39;,
        /// &#39;CopyFromSanSnapshot&#39;</param>

        /// <param name="storageAccountId">Required if createOption is Import. The Azure Resource Manager identifier
        /// of the storage account containing the blob to import as a disk.
        /// </param>

        /// <param name="imageReference">Disk source information for PIR or user images.
        /// </param>

        /// <param name="galleryImageReference">Required if creating from a Gallery Image. The
        /// id/sharedGalleryImageId/communityGalleryImageId of the ImageDiskReference
        /// will be the ARM id of the shared galley image version from which to create
        /// a disk.
        /// </param>

        /// <param name="sourceUri">If createOption is Import, this is the URI of a blob to be imported into a
        /// managed disk.
        /// </param>

        /// <param name="sourceResourceId">If createOption is Copy, this is the ARM id of the source snapshot or disk.
        /// </param>

        /// <param name="sourceUniqueId">If this field is set, this is the unique id identifying the source of this
        /// resource.
        /// </param>

        /// <param name="uploadSizeBytes">If createOption is Upload, this is the size of the contents of the upload
        /// including the VHD footer. This value should be between 20972032 (20 MiB +
        /// 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes
        /// for the VHD footer).
        /// </param>

        /// <param name="logicalSectorSize">Logical sector size in bytes for Ultra disks. Supported values are 512 ad
        /// 4096. 4096 is the default.
        /// </param>

        /// <param name="securityDataUri">If createOption is ImportSecure, this is the URI of a blob to be imported
        /// into VM guest state.
        /// </param>

        /// <param name="performancePlus">Set this flag to true to get a boost on the performance target of the disk
        /// deployed, see here on the respective performance target. This flag can only
        /// be set on disk creation time and cannot be disabled after enabled.
        /// </param>

        /// <param name="elasticSanResourceId">Required if createOption is CopyFromSanSnapshot. This is the ARM id of the
        /// source elastic san volume snapshot.
        /// </param>
        public CreationData(string createOption, string storageAccountId = default(string), ImageDiskReference imageReference = default(ImageDiskReference), ImageDiskReference galleryImageReference = default(ImageDiskReference), string sourceUri = default(string), string sourceResourceId = default(string), string sourceUniqueId = default(string), long? uploadSizeBytes = default(long?), int? logicalSectorSize = default(int?), string securityDataUri = default(string), bool? performancePlus = default(bool?), string elasticSanResourceId = default(string))

        {
            this.CreateOption = createOption;
            this.StorageAccountId = storageAccountId;
            this.ImageReference = imageReference;
            this.GalleryImageReference = galleryImageReference;
            this.SourceUri = sourceUri;
            this.SourceResourceId = sourceResourceId;
            this.SourceUniqueId = sourceUniqueId;
            this.UploadSizeBytes = uploadSizeBytes;
            this.LogicalSectorSize = logicalSectorSize;
            this.SecurityDataUri = securityDataUri;
            this.PerformancePlus = performancePlus;
            this.ElasticSanResourceId = elasticSanResourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets this enumerates the possible sources of a disk&#39;s creation. Possible values include: &#39;Empty&#39;, &#39;Attach&#39;, &#39;FromImage&#39;, &#39;Import&#39;, &#39;Copy&#39;, &#39;Restore&#39;, &#39;Upload&#39;, &#39;CopyStart&#39;, &#39;ImportSecure&#39;, &#39;UploadPreparedSecure&#39;, &#39;CopyFromSanSnapshot&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createOption")]
        public string CreateOption {get; set; }

        /// <summary>
        /// Gets or sets required if createOption is Import. The Azure Resource Manager
        /// identifier of the storage account containing the blob to import as a disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccountId")]
        public string StorageAccountId {get; set; }

        /// <summary>
        /// Gets or sets disk source information for PIR or user images.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "imageReference")]
        public ImageDiskReference ImageReference {get; set; }

        /// <summary>
        /// Gets or sets required if creating from a Gallery Image. The
        /// id/sharedGalleryImageId/communityGalleryImageId of the ImageDiskReference
        /// will be the ARM id of the shared galley image version from which to create
        /// a disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "galleryImageReference")]
        public ImageDiskReference GalleryImageReference {get; set; }

        /// <summary>
        /// Gets or sets if createOption is Import, this is the URI of a blob to be
        /// imported into a managed disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceUri")]
        public string SourceUri {get; set; }

        /// <summary>
        /// Gets or sets if createOption is Copy, this is the ARM id of the source
        /// snapshot or disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceResourceId")]
        public string SourceResourceId {get; set; }

        /// <summary>
        /// Gets if this field is set, this is the unique id identifying the source of
        /// this resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceUniqueId")]
        public string SourceUniqueId {get; private set; }

        /// <summary>
        /// Gets or sets if createOption is Upload, this is the size of the contents of
        /// the upload including the VHD footer. This value should be between 20972032
        /// (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB +
        /// 512 bytes for the VHD footer).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "uploadSizeBytes")]
        public long? UploadSizeBytes {get; set; }

        /// <summary>
        /// Gets or sets logical sector size in bytes for Ultra disks. Supported values
        /// are 512 ad 4096. 4096 is the default.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logicalSectorSize")]
        public int? LogicalSectorSize {get; set; }

        /// <summary>
        /// Gets or sets if createOption is ImportSecure, this is the URI of a blob to
        /// be imported into VM guest state.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "securityDataUri")]
        public string SecurityDataUri {get; set; }

        /// <summary>
        /// Gets or sets set this flag to true to get a boost on the performance target
        /// of the disk deployed, see here on the respective performance target. This
        /// flag can only be set on disk creation time and cannot be disabled after
        /// enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "performancePlus")]
        public bool? PerformancePlus {get; set; }

        /// <summary>
        /// Gets or sets required if createOption is CopyFromSanSnapshot. This is the
        /// ARM id of the source elastic san volume snapshot.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "elasticSanResourceId")]
        public string ElasticSanResourceId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.CreateOption == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "CreateOption");
            }









        }
    }
}