// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes virtual machine scale set operating system disk Update Object.
    /// This should be used for Updating VMSS OS Disk.
    /// </summary>
    public partial class VirtualMachineScaleSetUpdateOSDisk
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineScaleSetUpdateOSDisk class.
        /// </summary>
        public VirtualMachineScaleSetUpdateOSDisk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineScaleSetUpdateOSDisk class.
        /// </summary>

        /// <param name="caching">The caching type.
        /// Possible values include: &#39;None&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;</param>

        /// <param name="writeAcceleratorEnabled">Specifies whether writeAccelerator should be enabled or disabled on the
        /// disk.
        /// </param>

        /// <param name="diskSizeGb">Specifies the size of an empty data disk in gigabytes. This element can be
        /// used to overwrite the size of the disk in a virtual machine image. &lt;br&gt;&lt;br&gt;
        /// diskSizeGB is the number of bytes x 1024^3 for the disk and the value
        /// cannot be larger than 1023
        /// </param>

        /// <param name="image">The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied
        /// before using it to attach to the Virtual Machine. If SourceImage is
        /// provided, the destination VirtualHardDisk should not exist.
        /// </param>

        /// <param name="vhdContainers">The list of virtual hard disk container uris.
        /// </param>

        /// <param name="managedDisk">The managed disk parameters.
        /// </param>

        /// <param name="deleteOption">Specifies whether OS Disk should be deleted or detached upon VMSS Flex
        /// deletion (This feature is available for VMSS with Flexible
        /// OrchestrationMode only). &lt;br&gt;&lt;br&gt; Possible values: &lt;br&gt;&lt;br&gt; **Delete** If
        /// this value is used, the OS disk is deleted when VMSS Flex VM is
        /// deleted.&lt;br&gt;&lt;br&gt; **Detach** If this value is used, the OS disk is retained
        /// after VMSS Flex VM is deleted. &lt;br&gt;&lt;br&gt; The default value is set to
        /// **Delete**. For an Ephemeral OS Disk, the default value is set to
        /// **Delete**. User cannot change the delete option for Ephemeral OS Disk.
        /// Possible values include: &#39;Delete&#39;, &#39;Detach&#39;</param>
        public VirtualMachineScaleSetUpdateOSDisk(CachingTypes? caching = default(CachingTypes?), bool? writeAcceleratorEnabled = default(bool?), int? diskSizeGb = default(int?), VirtualHardDisk image = default(VirtualHardDisk), System.Collections.Generic.IList<string> vhdContainers = default(System.Collections.Generic.IList<string>), VirtualMachineScaleSetManagedDiskParameters managedDisk = default(VirtualMachineScaleSetManagedDiskParameters), string deleteOption = default(string))

        {
            this.Caching = caching;
            this.WriteAcceleratorEnabled = writeAcceleratorEnabled;
            this.DiskSizeGb = diskSizeGb;
            this.Image = image;
            this.VhdContainers = vhdContainers;
            this.ManagedDisk = managedDisk;
            this.DeleteOption = deleteOption;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the caching type. Possible values include: &#39;None&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "caching")]
        public CachingTypes? Caching {get; set; }

        /// <summary>
        /// Gets or sets specifies whether writeAccelerator should be enabled or
        /// disabled on the disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "writeAcceleratorEnabled")]
        public bool? WriteAcceleratorEnabled {get; set; }

        /// <summary>
        /// Gets or sets specifies the size of an empty data disk in gigabytes. This
        /// element can be used to overwrite the size of the disk in a virtual machine
        /// image. &lt;br&gt;&lt;br&gt; diskSizeGB is the number of bytes x 1024^3 for the disk and
        /// the value cannot be larger than 1023
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskSizeGB")]
        public int? DiskSizeGb {get; set; }

        /// <summary>
        /// Gets or sets the Source User Image VirtualHardDisk. This VirtualHardDisk
        /// will be copied before using it to attach to the Virtual Machine. If
        /// SourceImage is provided, the destination VirtualHardDisk should not exist.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "image")]
        public VirtualHardDisk Image {get; set; }

        /// <summary>
        /// Gets or sets the list of virtual hard disk container uris.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vhdContainers")]
        public System.Collections.Generic.IList<string> VhdContainers {get; set; }

        /// <summary>
        /// Gets or sets the managed disk parameters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "managedDisk")]
        public VirtualMachineScaleSetManagedDiskParameters ManagedDisk {get; set; }

        /// <summary>
        /// Gets or sets specifies whether OS Disk should be deleted or detached upon
        /// VMSS Flex deletion (This feature is available for VMSS with Flexible
        /// OrchestrationMode only). &lt;br&gt;&lt;br&gt; Possible values: &lt;br&gt;&lt;br&gt; **Delete** If
        /// this value is used, the OS disk is deleted when VMSS Flex VM is
        /// deleted.&lt;br&gt;&lt;br&gt; **Detach** If this value is used, the OS disk is retained
        /// after VMSS Flex VM is deleted. &lt;br&gt;&lt;br&gt; The default value is set to
        /// **Delete**. For an Ephemeral OS Disk, the default value is set to
        /// **Delete**. User cannot change the delete option for Ephemeral OS Disk. Possible values include: &#39;Delete&#39;, &#39;Detach&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "deleteOption")]
        public string DeleteOption {get; set; }
    }
}