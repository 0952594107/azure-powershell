// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// The input for OrchestrationServiceState
    /// </summary>
    public partial class OrchestrationServiceStateInput
    {
        /// <summary>
        /// Initializes a new instance of the OrchestrationServiceStateInput class.
        /// </summary>
        public OrchestrationServiceStateInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OrchestrationServiceStateInput class.
        /// </summary>

        /// <param name="serviceName">The name of the service.
        /// Possible values include: &#39;AutomaticRepairs&#39;,
        /// &#39;DummyOrchestrationServiceName&#39;</param>

        /// <param name="action">The action to be performed.
        /// Possible values include: &#39;Resume&#39;, &#39;Suspend&#39;</param>
        public OrchestrationServiceStateInput(string serviceName, string action)

        {
            this.ServiceName = serviceName;
            this.Action = action;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of the service. Possible values include: &#39;AutomaticRepairs&#39;, &#39;DummyOrchestrationServiceName&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceName")]
        public string ServiceName {get; set; }

        /// <summary>
        /// Gets or sets the action to be performed. Possible values include: &#39;Resume&#39;, &#39;Suspend&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "action")]
        public string Action {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ServiceName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ServiceName");
            }
            if (this.Action == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Action");
            }


        }
    }
}