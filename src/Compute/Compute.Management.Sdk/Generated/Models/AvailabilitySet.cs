// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Specifies information about the availability set that the virtual machine
    /// should be assigned to. Virtual machines specified in the same availability
    /// set are allocated to different nodes to maximize availability. For more
    /// information about availability sets, see [Availability sets
    /// overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview).
    /// For more information on Azure planned maintenance, see [Maintenance and
    /// updates for Virtual Machines in
    /// Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates).
    /// Currently, a VM can only be added to an availability set at creation time.
    /// An existing VM cannot be added to an availability set.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class AvailabilitySet : Resource
    {
        /// <summary>
        /// Initializes a new instance of the AvailabilitySet class.
        /// </summary>
        public AvailabilitySet()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AvailabilitySet class.
        /// </summary>

        /// <param name="id">Resource Id
        /// </param>

        /// <param name="name">Resource name
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="location">Resource location
        /// </param>

        /// <param name="tags">Resource tags
        /// </param>

        /// <param name="sku">Sku of the availability set, only name is required to be set. See
        /// AvailabilitySetSkuTypes for possible set of values. Use &#39;Aligned&#39; for
        /// virtual machines with managed disks and &#39;Classic&#39; for virtual machines with
        /// unmanaged disks. Default value is &#39;Classic&#39;.
        /// </param>

        /// <param name="platformUpdateDomainCount">Update Domain count.
        /// </param>

        /// <param name="platformFaultDomainCount">Fault Domain count.
        /// </param>

        /// <param name="virtualMachines">A list of references to all virtual machines in the availability set.
        /// </param>

        /// <param name="proximityPlacementGroup">Specifies information about the proximity placement group that the
        /// availability set should be assigned to. Minimum api-version: 2018-04-01.
        /// </param>

        /// <param name="statuses">The resource status information.
        /// </param>
        public AvailabilitySet(string location, string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), Sku sku = default(Sku), int? platformUpdateDomainCount = default(int?), int? platformFaultDomainCount = default(int?), System.Collections.Generic.IList<SubResource> virtualMachines = default(System.Collections.Generic.IList<SubResource>), SubResource proximityPlacementGroup = default(SubResource), System.Collections.Generic.IList<InstanceViewStatus> statuses = default(System.Collections.Generic.IList<InstanceViewStatus>))

        : base(location, id, name, type, tags)
        {
            this.Sku = sku;
            this.PlatformUpdateDomainCount = platformUpdateDomainCount;
            this.PlatformFaultDomainCount = platformFaultDomainCount;
            this.VirtualMachines = virtualMachines;
            this.ProximityPlacementGroup = proximityPlacementGroup;
            this.Statuses = statuses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets sku of the availability set, only name is required to be set.
        /// See AvailabilitySetSkuTypes for possible set of values. Use &#39;Aligned&#39; for
        /// virtual machines with managed disks and &#39;Classic&#39; for virtual machines with
        /// unmanaged disks. Default value is &#39;Classic&#39;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public Sku Sku {get; set; }

        /// <summary>
        /// Gets or sets update Domain count.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.platformUpdateDomainCount")]
        public int? PlatformUpdateDomainCount {get; set; }

        /// <summary>
        /// Gets or sets fault Domain count.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.platformFaultDomainCount")]
        public int? PlatformFaultDomainCount {get; set; }

        /// <summary>
        /// Gets or sets a list of references to all virtual machines in the
        /// availability set.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.virtualMachines")]
        public System.Collections.Generic.IList<SubResource> VirtualMachines {get; set; }

        /// <summary>
        /// Gets or sets specifies information about the proximity placement group that
        /// the availability set should be assigned to. Minimum api-version:
        /// 2018-04-01.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.proximityPlacementGroup")]
        public SubResource ProximityPlacementGroup {get; set; }

        /// <summary>
        /// Gets the resource status information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.statuses")]
        public System.Collections.Generic.IList<InstanceViewStatus> Statuses {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();




        }
    }
}