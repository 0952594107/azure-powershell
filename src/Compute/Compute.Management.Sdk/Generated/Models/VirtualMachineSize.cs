// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes the properties of a VM size.
    /// </summary>
    public partial class VirtualMachineSize
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineSize class.
        /// </summary>
        public VirtualMachineSize()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineSize class.
        /// </summary>

        /// <param name="name">The name of the virtual machine size.
        /// </param>

        /// <param name="numberOfCores">The number of cores supported by the virtual machine size. For Constrained
        /// vCPU capable VM sizes, this number represents the total vCPUs of quota that
        /// the VM uses. For accurate vCPU count, please refer to
        /// https://docs.microsoft.com/azure/virtual-machines/constrained-vcpu or
        /// https://docs.microsoft.com/rest/api/compute/resourceskus/list
        /// </param>

        /// <param name="osDiskSizeInMb">The OS disk size, in MB, allowed by the virtual machine size.
        /// </param>

        /// <param name="resourceDiskSizeInMb">The resource disk size, in MB, allowed by the virtual machine size.
        /// </param>

        /// <param name="memoryInMb">The amount of memory, in MB, supported by the virtual machine size.
        /// </param>

        /// <param name="maxDataDiskCount">The maximum number of data disks that can be attached to the virtual
        /// machine size.
        /// </param>
        public VirtualMachineSize(string name = default(string), int? numberOfCores = default(int?), int? osDiskSizeInMb = default(int?), int? resourceDiskSizeInMb = default(int?), int? memoryInMb = default(int?), int? maxDataDiskCount = default(int?))

        {
            this.Name = name;
            this.NumberOfCores = numberOfCores;
            this.OSDiskSizeInMb = osDiskSizeInMb;
            this.ResourceDiskSizeInMb = resourceDiskSizeInMb;
            this.MemoryInMb = memoryInMb;
            this.MaxDataDiskCount = maxDataDiskCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of the virtual machine size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets the number of cores supported by the virtual machine size. For
        /// Constrained vCPU capable VM sizes, this number represents the total vCPUs
        /// of quota that the VM uses. For accurate vCPU count, please refer to
        /// https://docs.microsoft.com/azure/virtual-machines/constrained-vcpu or
        /// https://docs.microsoft.com/rest/api/compute/resourceskus/list
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "numberOfCores")]
        public int? NumberOfCores {get; set; }

        /// <summary>
        /// Gets or sets the OS disk size, in MB, allowed by the virtual machine size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osDiskSizeInMB")]
        public int? OSDiskSizeInMb {get; set; }

        /// <summary>
        /// Gets or sets the resource disk size, in MB, allowed by the virtual machine
        /// size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceDiskSizeInMB")]
        public int? ResourceDiskSizeInMb {get; set; }

        /// <summary>
        /// Gets or sets the amount of memory, in MB, supported by the virtual machine
        /// size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "memoryInMB")]
        public int? MemoryInMb {get; set; }

        /// <summary>
        /// Gets or sets the maximum number of data disks that can be attached to the
        /// virtual machine size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxDataDiskCount")]
        public int? MaxDataDiskCount {get; set; }
    }
}