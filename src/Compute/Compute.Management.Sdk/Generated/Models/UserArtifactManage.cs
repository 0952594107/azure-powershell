// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    public partial class UserArtifactManage
    {
        /// <summary>
        /// Initializes a new instance of the UserArtifactManage class.
        /// </summary>
        public UserArtifactManage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserArtifactManage class.
        /// </summary>

        /// <param name="install">Required. The path and arguments to install the gallery application. This
        /// is limited to 4096 characters.
        /// </param>

        /// <param name="remove">Required. The path and arguments to remove the gallery application. This is
        /// limited to 4096 characters.
        /// </param>

        /// <param name="update">Optional. The path and arguments to update the gallery application. If not
        /// present, then update operation will invoke remove command on the previous
        /// version and install command on the current version of the gallery
        /// application. This is limited to 4096 characters.
        /// </param>
        public UserArtifactManage(string install, string remove, string update = default(string))

        {
            this.Install = install;
            this.Remove = remove;
            this.Update = update;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets required. The path and arguments to install the gallery
        /// application. This is limited to 4096 characters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "install")]
        public string Install {get; set; }

        /// <summary>
        /// Gets or sets required. The path and arguments to remove the gallery
        /// application. This is limited to 4096 characters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "remove")]
        public string Remove {get; set; }

        /// <summary>
        /// Gets or sets optional. The path and arguments to update the gallery
        /// application. If not present, then update operation will invoke remove
        /// command on the previous version and install command on the current version
        /// of the gallery application. This is limited to 4096 characters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "update")]
        public string Update {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Install == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Install");
            }
            if (this.Remove == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Remove");
            }



        }
    }
}