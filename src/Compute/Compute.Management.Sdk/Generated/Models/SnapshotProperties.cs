// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Snapshot resource properties.
    /// </summary>
    public partial class SnapshotProperties
    {
        /// <summary>
        /// Initializes a new instance of the SnapshotProperties class.
        /// </summary>
        public SnapshotProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SnapshotProperties class.
        /// </summary>

        /// <param name="timeCreated">The time when the snapshot was created.
        /// </param>

        /// <param name="osType">The Operating System type.
        /// Possible values include: &#39;Windows&#39;, &#39;Linux&#39;</param>

        /// <param name="hyperVGeneration">The hypervisor generation of the Virtual Machine. Applicable to OS disks
        /// only.
        /// Possible values include: &#39;V1&#39;, &#39;V2&#39;</param>

        /// <param name="purchasePlan">Purchase plan information for the image from which the source disk for the
        /// snapshot was originally created.
        /// </param>

        /// <param name="supportedCapabilities">List of supported capabilities for the image from which the source disk
        /// from the snapshot was originally created.
        /// </param>

        /// <param name="creationData">Disk source information. CreationData information cannot be changed after
        /// the disk has been created.
        /// </param>

        /// <param name="diskSizeGb">If creationData.createOption is Empty, this field is mandatory and it
        /// indicates the size of the disk to create. If this field is present for
        /// updates or creation with other options, it indicates a resize. Resizes are
        /// only allowed if the disk is not attached to a running VM, and can only
        /// increase the disk&#39;s size.
        /// </param>

        /// <param name="diskSizeBytes">The size of the disk in bytes. This field is read only.
        /// </param>

        /// <param name="diskState">The state of the snapshot.
        /// Possible values include: &#39;Unattached&#39;, &#39;Attached&#39;, &#39;Reserved&#39;, &#39;Frozen&#39;,
        /// &#39;ActiveSAS&#39;, &#39;ActiveSASFrozen&#39;, &#39;ReadyToUpload&#39;, &#39;ActiveUpload&#39;</param>

        /// <param name="uniqueId">Unique Guid identifying the resource.
        /// </param>

        /// <param name="encryptionSettingsCollection">Encryption settings collection used be Azure Disk Encryption, can contain
        /// multiple encryption settings per disk or snapshot.
        /// </param>

        /// <param name="provisioningState">The disk provisioning state.
        /// </param>

        /// <param name="incremental">Whether a snapshot is incremental. Incremental snapshots on the same disk
        /// occupy less space than full snapshots and can be diffed.
        /// </param>

        /// <param name="incrementalSnapshotFamilyId">Incremental snapshots for a disk share an incremental snapshot family id.
        /// The Get Page Range Diff API can only be called on incremental snapshots
        /// with the same family id.
        /// </param>

        /// <param name="encryption">Encryption property can be used to encrypt data at rest with customer
        /// managed keys or platform managed keys.
        /// </param>

        /// <param name="networkAccessPolicy">Policy for accessing the disk via network.
        /// Possible values include: &#39;AllowAll&#39;, &#39;AllowPrivate&#39;, &#39;DenyAll&#39;</param>

        /// <param name="diskAccessId">ARM id of the DiskAccess resource for using private endpoints on disks.
        /// </param>

        /// <param name="securityProfile">Contains the security related information for the resource.
        /// </param>

        /// <param name="supportsHibernation">Indicates the OS on a snapshot supports hibernation.
        /// </param>

        /// <param name="publicNetworkAccess">Policy for controlling export on the disk.
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>

        /// <param name="completionPercent">Percentage complete for the background copy when a resource is created via
        /// the CopyStart operation.
        /// </param>

        /// <param name="copyCompletionError">Indicates the error details if the background copy of a resource created
        /// via the CopyStart operation fails.
        /// </param>

        /// <param name="dataAccessAuthMode">Additional authentication requirements when exporting or uploading to a
        /// disk or snapshot.
        /// Possible values include: &#39;AzureActiveDirectory&#39;, &#39;None&#39;</param>
        public SnapshotProperties(CreationData creationData, System.DateTime? timeCreated = default(System.DateTime?), OperatingSystemTypes? osType = default(OperatingSystemTypes?), string hyperVGeneration = default(string), PurchasePlanAutoGenerated purchasePlan = default(PurchasePlanAutoGenerated), SupportedCapabilities supportedCapabilities = default(SupportedCapabilities), int? diskSizeGb = default(int?), long? diskSizeBytes = default(long?), string diskState = default(string), string uniqueId = default(string), EncryptionSettingsCollection encryptionSettingsCollection = default(EncryptionSettingsCollection), string provisioningState = default(string), bool? incremental = default(bool?), string incrementalSnapshotFamilyId = default(string), Encryption encryption = default(Encryption), string networkAccessPolicy = default(string), string diskAccessId = default(string), DiskSecurityProfile securityProfile = default(DiskSecurityProfile), bool? supportsHibernation = default(bool?), string publicNetworkAccess = default(string), double? completionPercent = default(double?), CopyCompletionError copyCompletionError = default(CopyCompletionError), string dataAccessAuthMode = default(string))

        {
            this.TimeCreated = timeCreated;
            this.OSType = osType;
            this.HyperVGeneration = hyperVGeneration;
            this.PurchasePlan = purchasePlan;
            this.SupportedCapabilities = supportedCapabilities;
            this.CreationData = creationData;
            this.DiskSizeGb = diskSizeGb;
            this.DiskSizeBytes = diskSizeBytes;
            this.DiskState = diskState;
            this.UniqueId = uniqueId;
            this.EncryptionSettingsCollection = encryptionSettingsCollection;
            this.ProvisioningState = provisioningState;
            this.Incremental = incremental;
            this.IncrementalSnapshotFamilyId = incrementalSnapshotFamilyId;
            this.Encryption = encryption;
            this.NetworkAccessPolicy = networkAccessPolicy;
            this.DiskAccessId = diskAccessId;
            this.SecurityProfile = securityProfile;
            this.SupportsHibernation = supportsHibernation;
            this.PublicNetworkAccess = publicNetworkAccess;
            this.CompletionPercent = completionPercent;
            this.CopyCompletionError = copyCompletionError;
            this.DataAccessAuthMode = dataAccessAuthMode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the time when the snapshot was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeCreated")]
        public System.DateTime? TimeCreated {get; private set; }

        /// <summary>
        /// Gets or sets the Operating System type. Possible values include: &#39;Windows&#39;, &#39;Linux&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osType")]
        public OperatingSystemTypes? OSType {get; set; }

        /// <summary>
        /// Gets or sets the hypervisor generation of the Virtual Machine. Applicable
        /// to OS disks only. Possible values include: &#39;V1&#39;, &#39;V2&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hyperVGeneration")]
        public string HyperVGeneration {get; set; }

        /// <summary>
        /// Gets or sets purchase plan information for the image from which the source
        /// disk for the snapshot was originally created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "purchasePlan")]
        public PurchasePlanAutoGenerated PurchasePlan {get; set; }

        /// <summary>
        /// Gets or sets list of supported capabilities for the image from which the
        /// source disk from the snapshot was originally created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "supportedCapabilities")]
        public SupportedCapabilities SupportedCapabilities {get; set; }

        /// <summary>
        /// Gets or sets disk source information. CreationData information cannot be
        /// changed after the disk has been created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creationData")]
        public CreationData CreationData {get; set; }

        /// <summary>
        /// Gets or sets if creationData.createOption is Empty, this field is mandatory
        /// and it indicates the size of the disk to create. If this field is present
        /// for updates or creation with other options, it indicates a resize. Resizes
        /// are only allowed if the disk is not attached to a running VM, and can only
        /// increase the disk&#39;s size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskSizeGB")]
        public int? DiskSizeGb {get; set; }

        /// <summary>
        /// Gets the size of the disk in bytes. This field is read only.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskSizeBytes")]
        public long? DiskSizeBytes {get; private set; }

        /// <summary>
        /// Gets the state of the snapshot. Possible values include: &#39;Unattached&#39;, &#39;Attached&#39;, &#39;Reserved&#39;, &#39;Frozen&#39;, &#39;ActiveSAS&#39;, &#39;ActiveSASFrozen&#39;, &#39;ReadyToUpload&#39;, &#39;ActiveUpload&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskState")]
        public string DiskState {get; private set; }

        /// <summary>
        /// Gets unique Guid identifying the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "uniqueId")]
        public string UniqueId {get; private set; }

        /// <summary>
        /// Gets or sets encryption settings collection used be Azure Disk Encryption,
        /// can contain multiple encryption settings per disk or snapshot.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptionSettingsCollection")]
        public EncryptionSettingsCollection EncryptionSettingsCollection {get; set; }

        /// <summary>
        /// Gets the disk provisioning state.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets whether a snapshot is incremental. Incremental snapshots on
        /// the same disk occupy less space than full snapshots and can be diffed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "incremental")]
        public bool? Incremental {get; set; }

        /// <summary>
        /// Gets incremental snapshots for a disk share an incremental snapshot family
        /// id. The Get Page Range Diff API can only be called on incremental snapshots
        /// with the same family id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "incrementalSnapshotFamilyId")]
        public string IncrementalSnapshotFamilyId {get; private set; }

        /// <summary>
        /// Gets or sets encryption property can be used to encrypt data at rest with
        /// customer managed keys or platform managed keys.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryption")]
        public Encryption Encryption {get; set; }

        /// <summary>
        /// Gets or sets policy for accessing the disk via network. Possible values include: &#39;AllowAll&#39;, &#39;AllowPrivate&#39;, &#39;DenyAll&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkAccessPolicy")]
        public string NetworkAccessPolicy {get; set; }

        /// <summary>
        /// Gets or sets aRM id of the DiskAccess resource for using private endpoints
        /// on disks.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskAccessId")]
        public string DiskAccessId {get; set; }

        /// <summary>
        /// Gets or sets contains the security related information for the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "securityProfile")]
        public DiskSecurityProfile SecurityProfile {get; set; }

        /// <summary>
        /// Gets or sets indicates the OS on a snapshot supports hibernation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "supportsHibernation")]
        public bool? SupportsHibernation {get; set; }

        /// <summary>
        /// Gets or sets policy for controlling export on the disk. Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicNetworkAccess")]
        public string PublicNetworkAccess {get; set; }

        /// <summary>
        /// Gets or sets percentage complete for the background copy when a resource is
        /// created via the CopyStart operation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "completionPercent")]
        public double? CompletionPercent {get; set; }

        /// <summary>
        /// Gets or sets indicates the error details if the background copy of a
        /// resource created via the CopyStart operation fails.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "copyCompletionError")]
        public CopyCompletionError CopyCompletionError {get; set; }

        /// <summary>
        /// Gets or sets additional authentication requirements when exporting or
        /// uploading to a disk or snapshot. Possible values include: &#39;AzureActiveDirectory&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataAccessAuthMode")]
        public string DataAccessAuthMode {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.CreationData == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "CreationData");
            }


            if (this.PurchasePlan != null)
            {
                this.PurchasePlan.Validate();
            }

            if (this.CreationData != null)
            {
                this.CreationData.Validate();
            }


            if (this.EncryptionSettingsCollection != null)
            {
                this.EncryptionSettingsCollection.Validate();
            }







            if (this.CopyCompletionError != null)
            {
                this.CopyCompletionError.Validate();
            }

        }
    }
}