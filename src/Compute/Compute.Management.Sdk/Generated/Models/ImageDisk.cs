// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes a image disk.
    /// </summary>
    public partial class ImageDisk
    {
        /// <summary>
        /// Initializes a new instance of the ImageDisk class.
        /// </summary>
        public ImageDisk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImageDisk class.
        /// </summary>

        /// <param name="snapshot">The snapshot.
        /// </param>

        /// <param name="managedDisk">The managedDisk.
        /// </param>

        /// <param name="blobUri">The Virtual Hard Disk.
        /// </param>

        /// <param name="caching">Specifies the caching requirements. Possible values are: **None,**
        /// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
        /// storage. ReadOnly for Premium storage.**
        /// Possible values include: &#39;None&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;</param>

        /// <param name="diskSizeGb">Specifies the size of empty data disks in gigabytes. This element can be
        /// used to overwrite the name of the disk in a virtual machine image. This
        /// value cannot be larger than 1023 GB.
        /// </param>

        /// <param name="storageAccountType">Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS
        /// can only be used with data disks, it cannot be used with OS Disk.
        /// Possible values include: &#39;Standard_LRS&#39;, &#39;Premium_LRS&#39;, &#39;StandardSSD_LRS&#39;,
        /// &#39;UltraSSD_LRS&#39;, &#39;Premium_ZRS&#39;, &#39;StandardSSD_ZRS&#39;, &#39;PremiumV2_LRS&#39;</param>

        /// <param name="diskEncryptionSet">Specifies the customer managed disk encryption set resource id for the
        /// managed image disk.
        /// </param>
        public ImageDisk(SubResource snapshot = default(SubResource), SubResource managedDisk = default(SubResource), string blobUri = default(string), CachingTypes? caching = default(CachingTypes?), int? diskSizeGb = default(int?), string storageAccountType = default(string), DiskEncryptionSetParameters diskEncryptionSet = default(DiskEncryptionSetParameters))

        {
            this.Snapshot = snapshot;
            this.ManagedDisk = managedDisk;
            this.BlobUri = blobUri;
            this.Caching = caching;
            this.DiskSizeGb = diskSizeGb;
            this.StorageAccountType = storageAccountType;
            this.DiskEncryptionSet = diskEncryptionSet;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the snapshot.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "snapshot")]
        public SubResource Snapshot {get; set; }

        /// <summary>
        /// Gets or sets the managedDisk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "managedDisk")]
        public SubResource ManagedDisk {get; set; }

        /// <summary>
        /// Gets or sets the Virtual Hard Disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "blobUri")]
        public string BlobUri {get; set; }

        /// <summary>
        /// Gets or sets specifies the caching requirements. Possible values are:
        /// **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for
        /// Standard storage. ReadOnly for Premium storage.** Possible values include: &#39;None&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "caching")]
        public CachingTypes? Caching {get; set; }

        /// <summary>
        /// Gets or sets specifies the size of empty data disks in gigabytes. This
        /// element can be used to overwrite the name of the disk in a virtual machine
        /// image. This value cannot be larger than 1023 GB.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskSizeGB")]
        public int? DiskSizeGb {get; set; }

        /// <summary>
        /// Gets or sets specifies the storage account type for the managed disk. NOTE:
        /// UltraSSD_LRS can only be used with data disks, it cannot be used with OS
        /// Disk. Possible values include: &#39;Standard_LRS&#39;, &#39;Premium_LRS&#39;, &#39;StandardSSD_LRS&#39;, &#39;UltraSSD_LRS&#39;, &#39;Premium_ZRS&#39;, &#39;StandardSSD_ZRS&#39;, &#39;PremiumV2_LRS&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccountType")]
        public string StorageAccountType {get; set; }

        /// <summary>
        /// Gets or sets specifies the customer managed disk encryption set resource id
        /// for the managed image disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskEncryptionSet")]
        public DiskEncryptionSetParameters DiskEncryptionSet {get; set; }
    }
}