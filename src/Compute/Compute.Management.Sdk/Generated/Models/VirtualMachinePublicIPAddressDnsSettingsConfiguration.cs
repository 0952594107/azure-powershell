// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes a virtual machines network configuration&#39;s DNS settings.
    /// </summary>
    public partial class VirtualMachinePublicIPAddressDnsSettingsConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachinePublicIPAddressDnsSettingsConfiguration class.
        /// </summary>
        public VirtualMachinePublicIPAddressDnsSettingsConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachinePublicIPAddressDnsSettingsConfiguration class.
        /// </summary>

        /// <param name="domainNameLabel">The Domain name label prefix of the PublicIPAddress resources that will be
        /// created. The generated name label is the concatenation of the domain name
        /// label and vm network profile unique ID.
        /// </param>

        /// <param name="domainNameLabelScope">The Domain name label scope of the PublicIPAddress resources that will be
        /// created. The generated name label is the concatenation of the hashed domain
        /// name label with policy according to the domain name label scope and vm
        /// network profile unique ID.
        /// Possible values include: &#39;TenantReuse&#39;, &#39;SubscriptionReuse&#39;,
        /// &#39;ResourceGroupReuse&#39;, &#39;NoReuse&#39;</param>
        public VirtualMachinePublicIPAddressDnsSettingsConfiguration(string domainNameLabel, string domainNameLabelScope = default(string))

        {
            this.DomainNameLabel = domainNameLabel;
            this.DomainNameLabelScope = domainNameLabelScope;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the Domain name label prefix of the PublicIPAddress resources
        /// that will be created. The generated name label is the concatenation of the
        /// domain name label and vm network profile unique ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "domainNameLabel")]
        public string DomainNameLabel {get; set; }

        /// <summary>
        /// Gets or sets the Domain name label scope of the PublicIPAddress resources
        /// that will be created. The generated name label is the concatenation of the
        /// hashed domain name label with policy according to the domain name label
        /// scope and vm network profile unique ID. Possible values include: &#39;TenantReuse&#39;, &#39;SubscriptionReuse&#39;, &#39;ResourceGroupReuse&#39;, &#39;NoReuse&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "domainNameLabelScope")]
        public string DomainNameLabelScope {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.DomainNameLabel == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DomainNameLabel");
            }


        }
    }
}