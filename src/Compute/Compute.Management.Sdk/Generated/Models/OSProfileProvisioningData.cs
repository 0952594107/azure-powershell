// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Additional parameters for Reimaging Non-Ephemeral Virtual Machine.
    /// </summary>
    public partial class OSProfileProvisioningData
    {
        /// <summary>
        /// Initializes a new instance of the OSProfileProvisioningData class.
        /// </summary>
        public OSProfileProvisioningData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OSProfileProvisioningData class.
        /// </summary>

        /// <param name="adminPassword">Specifies the password of the administrator account. &lt;br&gt;&lt;br&gt;
        /// **Minimum-length (Windows):** 8 characters &lt;br&gt;&lt;br&gt; **Minimum-length
        /// (Linux):** 6 characters &lt;br&gt;&lt;br&gt; **Max-length (Windows):** 123 characters
        /// &lt;br&gt;&lt;br&gt; **Max-length (Linux):** 72 characters &lt;br&gt;&lt;br&gt; **Complexity
        /// requirements:** 3 out of 4 conditions below need to be fulfilled &lt;br&gt; Has
        /// lower characters &lt;br&gt;Has upper characters &lt;br&gt; Has a digit &lt;br&gt; Has a
        /// special character (Regex match [\W_]) &lt;br&gt;&lt;br&gt; **Disallowed values:**
        /// &#34;abc@123&#34;, &#34;P@$$w0rd&#34;, &#34;P@ssw0rd&#34;, &#34;P@ssword123&#34;, &#34;Pa$$word&#34;, &#34;pass@word1&#34;,
        /// &#34;Password!&#34;, &#34;Password1&#34;, &#34;Password22&#34;, &#34;iloveyou!&#34; &lt;br&gt;&lt;br&gt; For resetting
        /// the password, see [How to reset the Remote Desktop service or its login
        /// password in a Windows
        /// VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)
        /// &lt;br&gt;&lt;br&gt; For resetting root password, see [Manage users, SSH, and check or
        /// repair disks on Azure Linux VMs using the VMAccess
        /// Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
        /// </param>

        /// <param name="customData">Specifies a base-64 encoded string of custom data. The base-64 encoded
        /// string is decoded to a binary array that is saved as a file on the Virtual
        /// Machine. The maximum length of the binary array is 65535 bytes. **Note: Do
        /// not pass any secrets or passwords in customData property.** This property
        /// cannot be updated after the VM is created. The property customData is
        /// passed to the VM to be saved as a file, for more information see [Custom
        /// Data on Azure
        /// VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/).
        /// If using cloud-init for your Linux VM, see [Using cloud-init to customize a
        /// Linux VM during
        /// creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init).
        /// </param>
        public OSProfileProvisioningData(string adminPassword = default(string), string customData = default(string))

        {
            this.AdminPassword = adminPassword;
            this.CustomData = customData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies the password of the administrator account. &lt;br&gt;&lt;br&gt;
        /// **Minimum-length (Windows):** 8 characters &lt;br&gt;&lt;br&gt; **Minimum-length
        /// (Linux):** 6 characters &lt;br&gt;&lt;br&gt; **Max-length (Windows):** 123 characters
        /// &lt;br&gt;&lt;br&gt; **Max-length (Linux):** 72 characters &lt;br&gt;&lt;br&gt; **Complexity
        /// requirements:** 3 out of 4 conditions below need to be fulfilled &lt;br&gt; Has
        /// lower characters &lt;br&gt;Has upper characters &lt;br&gt; Has a digit &lt;br&gt; Has a
        /// special character (Regex match [\W_]) &lt;br&gt;&lt;br&gt; **Disallowed values:**
        /// &#34;abc@123&#34;, &#34;P@$$w0rd&#34;, &#34;P@ssw0rd&#34;, &#34;P@ssword123&#34;, &#34;Pa$$word&#34;, &#34;pass@word1&#34;,
        /// &#34;Password!&#34;, &#34;Password1&#34;, &#34;Password22&#34;, &#34;iloveyou!&#34; &lt;br&gt;&lt;br&gt; For resetting
        /// the password, see [How to reset the Remote Desktop service or its login
        /// password in a Windows
        /// VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)
        /// &lt;br&gt;&lt;br&gt; For resetting root password, see [Manage users, SSH, and check or
        /// repair disks on Azure Linux VMs using the VMAccess
        /// Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "adminPassword")]
        public string AdminPassword {get; set; }

        /// <summary>
        /// Gets or sets specifies a base-64 encoded string of custom data. The base-64
        /// encoded string is decoded to a binary array that is saved as a file on the
        /// Virtual Machine. The maximum length of the binary array is 65535 bytes.
        /// **Note: Do not pass any secrets or passwords in customData property.** This
        /// property cannot be updated after the VM is created. The property customData
        /// is passed to the VM to be saved as a file, for more information see [Custom
        /// Data on Azure
        /// VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/).
        /// If using cloud-init for your Linux VM, see [Using cloud-init to customize a
        /// Linux VM during
        /// creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "customData")]
        public string CustomData {get; set; }
    }
}