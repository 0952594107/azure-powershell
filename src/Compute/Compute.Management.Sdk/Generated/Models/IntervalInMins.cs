// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{

    /// <summary>
    /// Defines values for IntervalInMins.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum IntervalInMins
    {
        [System.Runtime.Serialization.EnumMember(Value = "ThreeMins")]
        ThreeMins,
        [System.Runtime.Serialization.EnumMember(Value = "FiveMins")]
        FiveMins,
        [System.Runtime.Serialization.EnumMember(Value = "ThirtyMins")]
        ThirtyMins,
        [System.Runtime.Serialization.EnumMember(Value = "SixtyMins")]
        SixtyMins
    }
    internal static class IntervalInMinsEnumExtension
    {
        internal static string ToSerializedValue(this IntervalInMins? value)
        {
            return value == null ? null : ((IntervalInMins)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this IntervalInMins value)
        {
            switch( value )
            {
                case IntervalInMins.ThreeMins:
                    return "ThreeMins";
                case IntervalInMins.FiveMins:
                    return "FiveMins";
                case IntervalInMins.ThirtyMins:
                    return "ThirtyMins";
                case IntervalInMins.SixtyMins:
                    return "SixtyMins";
            }
            return null;
        }
        internal static IntervalInMins? ParseIntervalInMins(this string value)
        {
            switch( value )
            {
                case "ThreeMins":
                    return IntervalInMins.ThreeMins;
                case "FiveMins":
                    return IntervalInMins.FiveMins;
                case "ThirtyMins":
                    return IntervalInMins.ThirtyMins;
                case "SixtyMins":
                    return IntervalInMins.SixtyMins;
            }
            return null;
        }
    }
}