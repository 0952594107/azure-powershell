// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for RestorePointsOperations
    /// </summary>
    public static partial class RestorePointsOperationsExtensions
    {
        /// <summary>
        /// The operation to create the restore point. Updating properties of an
        /// existing restore point is not allowed
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='restorePointCollectionName'>
        /// The name of the restore point collection.
        /// </param>
        /// <param name='restorePointName'>
        /// The name of the restore point.
        /// </param>
        public static RestorePoint Create(this IRestorePointsOperations operations, string resourceGroupName, string restorePointCollectionName, string restorePointName, RestorePoint parameters)
        {
                return ((IRestorePointsOperations)operations).CreateAsync(resourceGroupName, restorePointCollectionName, restorePointName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to create the restore point. Updating properties of an
        /// existing restore point is not allowed
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='restorePointCollectionName'>
        /// The name of the restore point collection.
        /// </param>
        /// <param name='restorePointName'>
        /// The name of the restore point.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<RestorePoint> CreateAsync(this IRestorePointsOperations operations, string resourceGroupName, string restorePointCollectionName, string restorePointName, RestorePoint parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, restorePointCollectionName, restorePointName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to delete the restore point.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='restorePointCollectionName'>
        /// The name of the Restore Point Collection.
        /// </param>
        /// <param name='restorePointName'>
        /// The name of the restore point.
        /// </param>
        public static void Delete(this IRestorePointsOperations operations, string resourceGroupName, string restorePointCollectionName, string restorePointName)
        {
                ((IRestorePointsOperations)operations).DeleteAsync(resourceGroupName, restorePointCollectionName, restorePointName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to delete the restore point.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='restorePointCollectionName'>
        /// The name of the Restore Point Collection.
        /// </param>
        /// <param name='restorePointName'>
        /// The name of the restore point.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this IRestorePointsOperations operations, string resourceGroupName, string restorePointCollectionName, string restorePointName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, restorePointCollectionName, restorePointName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// The operation to get the restore point.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='restorePointCollectionName'>
        /// The name of the restore point collection.
        /// </param>
        /// <param name='restorePointName'>
        /// The name of the restore point.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply on the operation. &#39;InstanceView&#39; retrieves
        /// information about the run-time state of a restore point.
        /// </param>
        public static RestorePoint Get(this IRestorePointsOperations operations, string resourceGroupName, string restorePointCollectionName, string restorePointName, string expand = default(string))
        {
                return ((IRestorePointsOperations)operations).GetAsync(resourceGroupName, restorePointCollectionName, restorePointName, expand).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to get the restore point.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='restorePointCollectionName'>
        /// The name of the restore point collection.
        /// </param>
        /// <param name='restorePointName'>
        /// The name of the restore point.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply on the operation. &#39;InstanceView&#39; retrieves
        /// information about the run-time state of a restore point.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<RestorePoint> GetAsync(this IRestorePointsOperations operations, string resourceGroupName, string restorePointCollectionName, string restorePointName, string expand = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, restorePointCollectionName, restorePointName, expand, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to create the restore point. Updating properties of an
        /// existing restore point is not allowed
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='restorePointCollectionName'>
        /// The name of the restore point collection.
        /// </param>
        /// <param name='restorePointName'>
        /// The name of the restore point.
        /// </param>
        public static RestorePoint BeginCreate(this IRestorePointsOperations operations, string resourceGroupName, string restorePointCollectionName, string restorePointName, RestorePoint parameters)
        {
                return ((IRestorePointsOperations)operations).BeginCreateAsync(resourceGroupName, restorePointCollectionName, restorePointName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to create the restore point. Updating properties of an
        /// existing restore point is not allowed
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='restorePointCollectionName'>
        /// The name of the restore point collection.
        /// </param>
        /// <param name='restorePointName'>
        /// The name of the restore point.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<RestorePoint> BeginCreateAsync(this IRestorePointsOperations operations, string resourceGroupName, string restorePointCollectionName, string restorePointName, RestorePoint parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, restorePointCollectionName, restorePointName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to delete the restore point.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='restorePointCollectionName'>
        /// The name of the Restore Point Collection.
        /// </param>
        /// <param name='restorePointName'>
        /// The name of the restore point.
        /// </param>
        public static void BeginDelete(this IRestorePointsOperations operations, string resourceGroupName, string restorePointCollectionName, string restorePointName)
        {
                ((IRestorePointsOperations)operations).BeginDeleteAsync(resourceGroupName, restorePointCollectionName, restorePointName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to delete the restore point.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='restorePointCollectionName'>
        /// The name of the Restore Point Collection.
        /// </param>
        /// <param name='restorePointName'>
        /// The name of the restore point.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginDeleteAsync(this IRestorePointsOperations operations, string resourceGroupName, string restorePointCollectionName, string restorePointName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, restorePointCollectionName, restorePointName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
    }
}
