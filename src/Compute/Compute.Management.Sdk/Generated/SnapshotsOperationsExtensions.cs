// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for SnapshotsOperations
    /// </summary>
    public static partial class SnapshotsOperationsExtensions
    {
        /// <summary>
        /// Creates or updates a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static Snapshot CreateOrUpdate(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, Snapshot snapshot)
        {
                return ((ISnapshotsOperations)operations).CreateOrUpdateAsync(resourceGroupName, snapshotName, snapshot).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Snapshot> CreateOrUpdateAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, Snapshot snapshot, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, snapshotName, snapshot, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Updates (patches) a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static Snapshot Update(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, SnapshotUpdate snapshot)
        {
                return ((ISnapshotsOperations)operations).UpdateAsync(resourceGroupName, snapshotName, snapshot).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Updates (patches) a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Snapshot> UpdateAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, SnapshotUpdate snapshot, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, snapshotName, snapshot, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets information about a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static Snapshot Get(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName)
        {
                return ((ISnapshotsOperations)operations).GetAsync(resourceGroupName, snapshotName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets information about a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Snapshot> GetAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, snapshotName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static void Delete(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName)
        {
                ((ISnapshotsOperations)operations).DeleteAsync(resourceGroupName, snapshotName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, snapshotName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Lists snapshots under a resource group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Snapshot> ListByResourceGroup(this ISnapshotsOperations operations, string resourceGroupName)
        {
                return ((ISnapshotsOperations)operations).ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists snapshots under a resource group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Snapshot>> ListByResourceGroupAsync(this ISnapshotsOperations operations, string resourceGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists snapshots under a subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Snapshot> List(this ISnapshotsOperations operations)
        {
                return ((ISnapshotsOperations)operations).ListAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists snapshots under a subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Snapshot>> ListAsync(this ISnapshotsOperations operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Grants access to a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static AccessUri GrantAccess(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, GrantAccessData grantAccessData)
        {
                return ((ISnapshotsOperations)operations).GrantAccessAsync(resourceGroupName, snapshotName, grantAccessData).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Grants access to a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<AccessUri> GrantAccessAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, GrantAccessData grantAccessData, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GrantAccessWithHttpMessagesAsync(resourceGroupName, snapshotName, grantAccessData, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Revokes access to a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static void RevokeAccess(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName)
        {
                ((ISnapshotsOperations)operations).RevokeAccessAsync(resourceGroupName, snapshotName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Revokes access to a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task RevokeAccessAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.RevokeAccessWithHttpMessagesAsync(resourceGroupName, snapshotName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Creates or updates a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static Snapshot BeginCreateOrUpdate(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, Snapshot snapshot)
        {
                return ((ISnapshotsOperations)operations).BeginCreateOrUpdateAsync(resourceGroupName, snapshotName, snapshot).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Snapshot> BeginCreateOrUpdateAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, Snapshot snapshot, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, snapshotName, snapshot, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Updates (patches) a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static Snapshot BeginUpdate(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, SnapshotUpdate snapshot)
        {
                return ((ISnapshotsOperations)operations).BeginUpdateAsync(resourceGroupName, snapshotName, snapshot).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Updates (patches) a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Snapshot> BeginUpdateAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, SnapshotUpdate snapshot, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, snapshotName, snapshot, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static void BeginDelete(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName)
        {
                ((ISnapshotsOperations)operations).BeginDeleteAsync(resourceGroupName, snapshotName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginDeleteAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, snapshotName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Grants access to a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static AccessUri BeginGrantAccess(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, GrantAccessData grantAccessData)
        {
                return ((ISnapshotsOperations)operations).BeginGrantAccessAsync(resourceGroupName, snapshotName, grantAccessData).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Grants access to a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<AccessUri> BeginGrantAccessAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, GrantAccessData grantAccessData, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginGrantAccessWithHttpMessagesAsync(resourceGroupName, snapshotName, grantAccessData, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Revokes access to a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        public static void BeginRevokeAccess(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName)
        {
                ((ISnapshotsOperations)operations).BeginRevokeAccessAsync(resourceGroupName, snapshotName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Revokes access to a snapshot.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='snapshotName'>
        /// The name of the snapshot that is being created. The name can&#39;t be changed
        /// after the snapshot is created. Supported characters for the name are a-z,
        /// A-Z, 0-9, _ and -. The max name length is 80 characters.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginRevokeAccessAsync(this ISnapshotsOperations operations, string resourceGroupName, string snapshotName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginRevokeAccessWithHttpMessagesAsync(resourceGroupName, snapshotName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Lists snapshots under a resource group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Snapshot> ListByResourceGroupNext(this ISnapshotsOperations operations, string nextPageLink)
        {
                return ((ISnapshotsOperations)operations).ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists snapshots under a resource group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Snapshot>> ListByResourceGroupNextAsync(this ISnapshotsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists snapshots under a subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Snapshot> ListNext(this ISnapshotsOperations operations, string nextPageLink)
        {
                return ((ISnapshotsOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists snapshots under a subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Snapshot>> ListNextAsync(this ISnapshotsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
