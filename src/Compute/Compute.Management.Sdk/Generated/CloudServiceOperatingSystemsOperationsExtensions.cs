// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for CloudServiceOperatingSystemsOperations
    /// </summary>
    public static partial class CloudServiceOperatingSystemsOperationsExtensions
    {
        /// <summary>
        /// Gets properties of a guest operating system version that can be specified
        /// in the XML service configuration (.cscfg) for a cloud service.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Name of the location that the OS version pertains to.
        /// </param>
        /// <param name='osVersionName'>
        /// Name of the OS version.
        /// </param>
        public static OSVersion GetOSVersion(this ICloudServiceOperatingSystemsOperations operations, string location, string osVersionName)
        {
                return ((ICloudServiceOperatingSystemsOperations)operations).GetOSVersionAsync(location, osVersionName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets properties of a guest operating system version that can be specified
        /// in the XML service configuration (.cscfg) for a cloud service.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Name of the location that the OS version pertains to.
        /// </param>
        /// <param name='osVersionName'>
        /// Name of the OS version.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<OSVersion> GetOSVersionAsync(this ICloudServiceOperatingSystemsOperations operations, string location, string osVersionName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetOSVersionWithHttpMessagesAsync(location, osVersionName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of all guest operating system versions available to be
        /// specified in the XML service configuration (.cscfg) for a cloud service.
        /// Use nextLink property in the response to get the next page of OS versions.
        /// Do this till nextLink is null to fetch all the OS versions.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Name of the location that the OS versions pertain to.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<OSVersion> ListOSVersions(this ICloudServiceOperatingSystemsOperations operations, string location)
        {
                return ((ICloudServiceOperatingSystemsOperations)operations).ListOSVersionsAsync(location).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of all guest operating system versions available to be
        /// specified in the XML service configuration (.cscfg) for a cloud service.
        /// Use nextLink property in the response to get the next page of OS versions.
        /// Do this till nextLink is null to fetch all the OS versions.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Name of the location that the OS versions pertain to.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<OSVersion>> ListOSVersionsAsync(this ICloudServiceOperatingSystemsOperations operations, string location, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListOSVersionsWithHttpMessagesAsync(location, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets properties of a guest operating system family that can be specified in
        /// the XML service configuration (.cscfg) for a cloud service.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Name of the location that the OS family pertains to.
        /// </param>
        /// <param name='osFamilyName'>
        /// Name of the OS family.
        /// </param>
        public static OSFamily GetOSFamily(this ICloudServiceOperatingSystemsOperations operations, string location, string osFamilyName)
        {
                return ((ICloudServiceOperatingSystemsOperations)operations).GetOSFamilyAsync(location, osFamilyName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets properties of a guest operating system family that can be specified in
        /// the XML service configuration (.cscfg) for a cloud service.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Name of the location that the OS family pertains to.
        /// </param>
        /// <param name='osFamilyName'>
        /// Name of the OS family.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<OSFamily> GetOSFamilyAsync(this ICloudServiceOperatingSystemsOperations operations, string location, string osFamilyName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetOSFamilyWithHttpMessagesAsync(location, osFamilyName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of all guest operating system families available to be
        /// specified in the XML service configuration (.cscfg) for a cloud service.
        /// Use nextLink property in the response to get the next page of OS Families.
        /// Do this till nextLink is null to fetch all the OS Families.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Name of the location that the OS families pertain to.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<OSFamily> ListOSFamilies(this ICloudServiceOperatingSystemsOperations operations, string location)
        {
                return ((ICloudServiceOperatingSystemsOperations)operations).ListOSFamiliesAsync(location).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of all guest operating system families available to be
        /// specified in the XML service configuration (.cscfg) for a cloud service.
        /// Use nextLink property in the response to get the next page of OS Families.
        /// Do this till nextLink is null to fetch all the OS Families.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Name of the location that the OS families pertain to.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<OSFamily>> ListOSFamiliesAsync(this ICloudServiceOperatingSystemsOperations operations, string location, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListOSFamiliesWithHttpMessagesAsync(location, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of all guest operating system versions available to be
        /// specified in the XML service configuration (.cscfg) for a cloud service.
        /// Use nextLink property in the response to get the next page of OS versions.
        /// Do this till nextLink is null to fetch all the OS versions.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<OSVersion> ListOSVersionsNext(this ICloudServiceOperatingSystemsOperations operations, string nextPageLink)
        {
                return ((ICloudServiceOperatingSystemsOperations)operations).ListOSVersionsNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of all guest operating system versions available to be
        /// specified in the XML service configuration (.cscfg) for a cloud service.
        /// Use nextLink property in the response to get the next page of OS versions.
        /// Do this till nextLink is null to fetch all the OS versions.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<OSVersion>> ListOSVersionsNextAsync(this ICloudServiceOperatingSystemsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListOSVersionsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of all guest operating system families available to be
        /// specified in the XML service configuration (.cscfg) for a cloud service.
        /// Use nextLink property in the response to get the next page of OS Families.
        /// Do this till nextLink is null to fetch all the OS Families.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<OSFamily> ListOSFamiliesNext(this ICloudServiceOperatingSystemsOperations operations, string nextPageLink)
        {
                return ((ICloudServiceOperatingSystemsOperations)operations).ListOSFamiliesNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of all guest operating system families available to be
        /// specified in the XML service configuration (.cscfg) for a cloud service.
        /// Use nextLink property in the response to get the next page of OS Families.
        /// Do this till nextLink is null to fetch all the OS Families.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<OSFamily>> ListOSFamiliesNextAsync(this ICloudServiceOperatingSystemsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListOSFamiliesNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
