// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for CapacityReservationsOperations
    /// </summary>
    public static partial class CapacityReservationsOperationsExtensions
    {
        /// <summary>
        /// The operation to create or update a capacity reservation. Please note some
        /// properties can be set only during capacity reservation creation. Please
        /// refer to https://aka.ms/CapacityReservation for more details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        public static CapacityReservation CreateOrUpdate(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, CapacityReservation parameters)
        {
                return ((ICapacityReservationsOperations)operations).CreateOrUpdateAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to create or update a capacity reservation. Please note some
        /// properties can be set only during capacity reservation creation. Please
        /// refer to https://aka.ms/CapacityReservation for more details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CapacityReservation> CreateOrUpdateAsync(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, CapacityReservation parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to update a capacity reservation.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        public static CapacityReservation Update(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, CapacityReservationUpdate parameters)
        {
                return ((ICapacityReservationsOperations)operations).UpdateAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to update a capacity reservation.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CapacityReservation> UpdateAsync(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, CapacityReservationUpdate parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to delete a capacity reservation. This operation is allowed
        /// only when all the associated resources are disassociated from the capacity
        /// reservation. Please refer to https://aka.ms/CapacityReservation for more
        /// details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        public static void Delete(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName)
        {
                ((ICapacityReservationsOperations)operations).DeleteAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to delete a capacity reservation. This operation is allowed
        /// only when all the associated resources are disassociated from the capacity
        /// reservation. Please refer to https://aka.ms/CapacityReservation for more
        /// details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// The operation that retrieves information about the capacity reservation.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply on the operation. &#39;InstanceView&#39; retrieves a
        /// snapshot of the runtime properties of the capacity reservation that is
        /// managed by the platform and can change outside of control plane operations.
        /// </param>
        public static CapacityReservation Get(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, string expand = default(string))
        {
                return ((ICapacityReservationsOperations)operations).GetAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, expand).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation that retrieves information about the capacity reservation.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply on the operation. &#39;InstanceView&#39; retrieves a
        /// snapshot of the runtime properties of the capacity reservation that is
        /// managed by the platform and can change outside of control plane operations.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CapacityReservation> GetAsync(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, string expand = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, expand, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all of the capacity reservations in the specified capacity
        /// reservation group. Use the nextLink property in the response to get the
        /// next page of capacity reservations.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<CapacityReservation> ListByCapacityReservationGroup(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName)
        {
                return ((ICapacityReservationsOperations)operations).ListByCapacityReservationGroupAsync(resourceGroupName, capacityReservationGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all of the capacity reservations in the specified capacity
        /// reservation group. Use the nextLink property in the response to get the
        /// next page of capacity reservations.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<CapacityReservation>> ListByCapacityReservationGroupAsync(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByCapacityReservationGroupWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to create or update a capacity reservation. Please note some
        /// properties can be set only during capacity reservation creation. Please
        /// refer to https://aka.ms/CapacityReservation for more details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        public static CapacityReservation BeginCreateOrUpdate(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, CapacityReservation parameters)
        {
                return ((ICapacityReservationsOperations)operations).BeginCreateOrUpdateAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to create or update a capacity reservation. Please note some
        /// properties can be set only during capacity reservation creation. Please
        /// refer to https://aka.ms/CapacityReservation for more details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CapacityReservation> BeginCreateOrUpdateAsync(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, CapacityReservation parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to update a capacity reservation.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        public static CapacityReservation BeginUpdate(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, CapacityReservationUpdate parameters)
        {
                return ((ICapacityReservationsOperations)operations).BeginUpdateAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to update a capacity reservation.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CapacityReservation> BeginUpdateAsync(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, CapacityReservationUpdate parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to delete a capacity reservation. This operation is allowed
        /// only when all the associated resources are disassociated from the capacity
        /// reservation. Please refer to https://aka.ms/CapacityReservation for more
        /// details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        public static void BeginDelete(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName)
        {
                ((ICapacityReservationsOperations)operations).BeginDeleteAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to delete a capacity reservation. This operation is allowed
        /// only when all the associated resources are disassociated from the capacity
        /// reservation. Please refer to https://aka.ms/CapacityReservation for more
        /// details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='capacityReservationName'>
        /// The name of the capacity reservation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginDeleteAsync(this ICapacityReservationsOperations operations, string resourceGroupName, string capacityReservationGroupName, string capacityReservationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, capacityReservationName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Lists all of the capacity reservations in the specified capacity
        /// reservation group. Use the nextLink property in the response to get the
        /// next page of capacity reservations.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<CapacityReservation> ListByCapacityReservationGroupNext(this ICapacityReservationsOperations operations, string nextPageLink)
        {
                return ((ICapacityReservationsOperations)operations).ListByCapacityReservationGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all of the capacity reservations in the specified capacity
        /// reservation group. Use the nextLink property in the response to get the
        /// next page of capacity reservations.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<CapacityReservation>> ListByCapacityReservationGroupNextAsync(this ICapacityReservationsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByCapacityReservationGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
