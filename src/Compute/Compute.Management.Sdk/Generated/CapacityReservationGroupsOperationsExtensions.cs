// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for CapacityReservationGroupsOperations
    /// </summary>
    public static partial class CapacityReservationGroupsOperationsExtensions
    {
        /// <summary>
        /// The operation to create or update a capacity reservation group. When
        /// updating a capacity reservation group, only tags and sharing profile may be
        /// modified. Please refer to https://aka.ms/CapacityReservation for more
        /// details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        public static CapacityReservationGroup CreateOrUpdate(this ICapacityReservationGroupsOperations operations, string resourceGroupName, string capacityReservationGroupName, CapacityReservationGroup parameters)
        {
                return ((ICapacityReservationGroupsOperations)operations).CreateOrUpdateAsync(resourceGroupName, capacityReservationGroupName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to create or update a capacity reservation group. When
        /// updating a capacity reservation group, only tags and sharing profile may be
        /// modified. Please refer to https://aka.ms/CapacityReservation for more
        /// details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CapacityReservationGroup> CreateOrUpdateAsync(this ICapacityReservationGroupsOperations operations, string resourceGroupName, string capacityReservationGroupName, CapacityReservationGroup parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to update a capacity reservation group. When updating a
        /// capacity reservation group, only tags and sharing profile may be modified.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        public static CapacityReservationGroup Update(this ICapacityReservationGroupsOperations operations, string resourceGroupName, string capacityReservationGroupName, CapacityReservationGroupUpdate parameters)
        {
                return ((ICapacityReservationGroupsOperations)operations).UpdateAsync(resourceGroupName, capacityReservationGroupName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to update a capacity reservation group. When updating a
        /// capacity reservation group, only tags and sharing profile may be modified.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CapacityReservationGroup> UpdateAsync(this ICapacityReservationGroupsOperations operations, string resourceGroupName, string capacityReservationGroupName, CapacityReservationGroupUpdate parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to delete a capacity reservation group. This operation is
        /// allowed only if all the associated resources are disassociated from the
        /// reservation group and all capacity reservations under the reservation group
        /// have also been deleted. Please refer to https://aka.ms/CapacityReservation
        /// for more details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        public static void Delete(this ICapacityReservationGroupsOperations operations, string resourceGroupName, string capacityReservationGroupName)
        {
                ((ICapacityReservationGroupsOperations)operations).DeleteAsync(resourceGroupName, capacityReservationGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to delete a capacity reservation group. This operation is
        /// allowed only if all the associated resources are disassociated from the
        /// reservation group and all capacity reservations under the reservation group
        /// have also been deleted. Please refer to https://aka.ms/CapacityReservation
        /// for more details.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this ICapacityReservationGroupsOperations operations, string resourceGroupName, string capacityReservationGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// The operation that retrieves information about a capacity reservation
        /// group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply on the operation. &#39;InstanceView&#39; will
        /// retrieve the list of instance views of the capacity reservations under the
        /// capacity reservation group which is a snapshot of the runtime properties of
        /// a capacity reservation that is managed by the platform and can change
        /// outside of control plane operations.
        /// </param>
        public static CapacityReservationGroup Get(this ICapacityReservationGroupsOperations operations, string resourceGroupName, string capacityReservationGroupName, string expand = default(string))
        {
                return ((ICapacityReservationGroupsOperations)operations).GetAsync(resourceGroupName, capacityReservationGroupName, expand).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation that retrieves information about a capacity reservation
        /// group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='capacityReservationGroupName'>
        /// The name of the capacity reservation group.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply on the operation. &#39;InstanceView&#39; will
        /// retrieve the list of instance views of the capacity reservations under the
        /// capacity reservation group which is a snapshot of the runtime properties of
        /// a capacity reservation that is managed by the platform and can change
        /// outside of control plane operations.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CapacityReservationGroup> GetAsync(this ICapacityReservationGroupsOperations operations, string resourceGroupName, string capacityReservationGroupName, string expand = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, capacityReservationGroupName, expand, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all of the capacity reservation groups in the specified resource
        /// group. Use the nextLink property in the response to get the next page of
        /// capacity reservation groups.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply on the operation. Based on the expand
        /// param(s) specified we return Virtual Machine or ScaleSet VM Instance or
        /// both resource Ids which are associated to capacity reservation group in the
        /// response.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<CapacityReservationGroup> ListByResourceGroup(this ICapacityReservationGroupsOperations operations, string resourceGroupName, string expand = default(string))
        {
                return ((ICapacityReservationGroupsOperations)operations).ListByResourceGroupAsync(resourceGroupName, expand).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all of the capacity reservation groups in the specified resource
        /// group. Use the nextLink property in the response to get the next page of
        /// capacity reservation groups.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply on the operation. Based on the expand
        /// param(s) specified we return Virtual Machine or ScaleSet VM Instance or
        /// both resource Ids which are associated to capacity reservation group in the
        /// response.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<CapacityReservationGroup>> ListByResourceGroupAsync(this ICapacityReservationGroupsOperations operations, string resourceGroupName, string expand = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, expand, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all of the capacity reservation groups in the subscription. Use the
        /// nextLink property in the response to get the next page of capacity
        /// reservation groups.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply on the operation. Based on the expand
        /// param(s) specified we return Virtual Machine or ScaleSet VM Instance or
        /// both resource Ids which are associated to capacity reservation group in the
        /// response.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<CapacityReservationGroup> ListBySubscription(this ICapacityReservationGroupsOperations operations, string expand = default(string))
        {
                return ((ICapacityReservationGroupsOperations)operations).ListBySubscriptionAsync(expand).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all of the capacity reservation groups in the subscription. Use the
        /// nextLink property in the response to get the next page of capacity
        /// reservation groups.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply on the operation. Based on the expand
        /// param(s) specified we return Virtual Machine or ScaleSet VM Instance or
        /// both resource Ids which are associated to capacity reservation group in the
        /// response.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<CapacityReservationGroup>> ListBySubscriptionAsync(this ICapacityReservationGroupsOperations operations, string expand = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(expand, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all of the capacity reservation groups in the specified resource
        /// group. Use the nextLink property in the response to get the next page of
        /// capacity reservation groups.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<CapacityReservationGroup> ListByResourceGroupNext(this ICapacityReservationGroupsOperations operations, string nextPageLink)
        {
                return ((ICapacityReservationGroupsOperations)operations).ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all of the capacity reservation groups in the specified resource
        /// group. Use the nextLink property in the response to get the next page of
        /// capacity reservation groups.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<CapacityReservationGroup>> ListByResourceGroupNextAsync(this ICapacityReservationGroupsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all of the capacity reservation groups in the subscription. Use the
        /// nextLink property in the response to get the next page of capacity
        /// reservation groups.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<CapacityReservationGroup> ListBySubscriptionNext(this ICapacityReservationGroupsOperations operations, string nextPageLink)
        {
                return ((ICapacityReservationGroupsOperations)operations).ListBySubscriptionNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all of the capacity reservation groups in the subscription. Use the
        /// nextLink property in the response to get the next page of capacity
        /// reservation groups.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<CapacityReservationGroup>> ListBySubscriptionNextAsync(this ICapacityReservationGroupsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListBySubscriptionNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
