// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// CloudServiceRoleInstancesOperations operations.
    /// </summary>
    public partial interface ICloudServiceRoleInstancesOperations
    {
        /// <summary>
        /// Deletes a role instance from a cloud service.
        /// </summary>
        /// <remarks>
        /// Deletes a role instance from a cloud service.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> DeleteWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a role instance from a cloud service.
        /// </summary>
        /// <remarks>
        /// Gets a role instance from a cloud service.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply to the operation. &#39;UserData&#39; is not
        /// supported for cloud services.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<RoleInstance>> GetWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, InstanceViewTypes? expand = default(InstanceViewTypes?), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Retrieves information about the run-time state of a role instance in a
        /// cloud service.
        /// </summary>
        /// <remarks>
        /// Retrieves information about the run-time state of a role instance in a
        /// cloud service.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<RoleInstanceView>> GetInstanceViewWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets the list of all role instances in a cloud service. Use nextLink
        /// property in the response to get the next page of role instances. Do this
        /// till nextLink is null to fetch all the role instances.
        /// </summary>
        /// <remarks>
        /// Gets the list of all role instances in a cloud service. Use nextLink
        /// property in the response to get the next page of role instances. Do this
        /// till nextLink is null to fetch all the role instances.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='expand'>
        /// The expand expression to apply to the operation. &#39;UserData&#39; is not
        /// supported for cloud services.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<RoleInstance>>> ListWithHttpMessagesAsync(string resourceGroupName, string cloudServiceName, InstanceViewTypes? expand = default(InstanceViewTypes?), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The Reboot Role Instance asynchronous operation requests a reboot of a role
        /// instance in the cloud service.
        /// </summary>
        /// <remarks>
        /// The Reboot Role Instance asynchronous operation requests a reboot of a role
        /// instance in the cloud service.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> RestartWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The Reimage Role Instance asynchronous operation reinstalls the operating
        /// system on instances of web roles or worker roles.
        /// </summary>
        /// <remarks>
        /// The Reimage Role Instance asynchronous operation reinstalls the operating
        /// system on instances of web roles or worker roles.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> ReimageWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The Rebuild Role Instance asynchronous operation reinstalls the operating
        /// system on instances of web roles or worker roles and initializes the
        /// storage resources that are used by them. If you do not want to initialize
        /// storage resources, you can use Reimage Role Instance.
        /// </summary>
        /// <remarks>
        /// The Rebuild Role Instance asynchronous operation reinstalls the operating
        /// system on instances of web roles or worker roles and initializes the
        /// storage resources that are used by them. If you do not want to initialize
        /// storage resources, you can use Reimage Role Instance.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> RebuildWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a remote desktop file for a role instance in a cloud service.
        /// </summary>
        /// <remarks>
        /// Gets a remote desktop file for a role instance in a cloud service.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<System.IO.Stream>> GetRemoteDesktopFileWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Deletes a role instance from a cloud service.
        /// </summary>
        /// <remarks>
        /// Deletes a role instance from a cloud service.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The Reboot Role Instance asynchronous operation requests a reboot of a role
        /// instance in the cloud service.
        /// </summary>
        /// <remarks>
        /// The Reboot Role Instance asynchronous operation requests a reboot of a role
        /// instance in the cloud service.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> BeginRestartWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The Reimage Role Instance asynchronous operation reinstalls the operating
        /// system on instances of web roles or worker roles.
        /// </summary>
        /// <remarks>
        /// The Reimage Role Instance asynchronous operation reinstalls the operating
        /// system on instances of web roles or worker roles.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> BeginReimageWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The Rebuild Role Instance asynchronous operation reinstalls the operating
        /// system on instances of web roles or worker roles and initializes the
        /// storage resources that are used by them. If you do not want to initialize
        /// storage resources, you can use Reimage Role Instance.
        /// </summary>
        /// <remarks>
        /// The Rebuild Role Instance asynchronous operation reinstalls the operating
        /// system on instances of web roles or worker roles and initializes the
        /// storage resources that are used by them. If you do not want to initialize
        /// storage resources, you can use Reimage Role Instance.
        /// </remarks>
        /// <param name='roleInstanceName'>
        /// Name of the role instance.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group.
        /// </param>
        /// <param name='cloudServiceName'>
        /// Name of the cloud service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> BeginRebuildWithHttpMessagesAsync(string roleInstanceName, string resourceGroupName, string cloudServiceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets the list of all role instances in a cloud service. Use nextLink
        /// property in the response to get the next page of role instances. Do this
        /// till nextLink is null to fetch all the role instances.
        /// </summary>
        /// <remarks>
        /// Gets the list of all role instances in a cloud service. Use nextLink
        /// property in the response to get the next page of role instances. Do this
        /// till nextLink is null to fetch all the role instances.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<RoleInstance>>> ListNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }
}