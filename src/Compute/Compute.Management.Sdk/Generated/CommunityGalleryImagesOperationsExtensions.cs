// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for CommunityGalleryImagesOperations
    /// </summary>
    public static partial class CommunityGalleryImagesOperationsExtensions
    {
        /// <summary>
        /// Get a community gallery image.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Resource location.
        /// </param>
        /// <param name='publicGalleryName'>
        /// The public name of the community gallery.
        /// </param>
        /// <param name='galleryImageName'>
        /// The name of the community gallery image definition.
        /// </param>
        public static CommunityGalleryImage Get(this ICommunityGalleryImagesOperations operations, string location, string publicGalleryName, string galleryImageName)
        {
                return ((ICommunityGalleryImagesOperations)operations).GetAsync(location, publicGalleryName, galleryImageName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a community gallery image.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Resource location.
        /// </param>
        /// <param name='publicGalleryName'>
        /// The public name of the community gallery.
        /// </param>
        /// <param name='galleryImageName'>
        /// The name of the community gallery image definition.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CommunityGalleryImage> GetAsync(this ICommunityGalleryImagesOperations operations, string location, string publicGalleryName, string galleryImageName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(location, publicGalleryName, galleryImageName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// List community gallery images inside a gallery.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Resource location.
        /// </param>
        /// <param name='publicGalleryName'>
        /// The public name of the community gallery.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<CommunityGalleryImage> List(this ICommunityGalleryImagesOperations operations, string location, string publicGalleryName)
        {
                return ((ICommunityGalleryImagesOperations)operations).ListAsync(location, publicGalleryName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// List community gallery images inside a gallery.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Resource location.
        /// </param>
        /// <param name='publicGalleryName'>
        /// The public name of the community gallery.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<CommunityGalleryImage>> ListAsync(this ICommunityGalleryImagesOperations operations, string location, string publicGalleryName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(location, publicGalleryName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// List community gallery images inside a gallery.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<CommunityGalleryImage> ListNext(this ICommunityGalleryImagesOperations operations, string nextPageLink)
        {
                return ((ICommunityGalleryImagesOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// List community gallery images inside a gallery.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<CommunityGalleryImage>> ListNextAsync(this ICommunityGalleryImagesOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
