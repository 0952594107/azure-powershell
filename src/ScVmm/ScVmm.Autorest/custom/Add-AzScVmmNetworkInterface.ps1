
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The operation to Create a virtual machine network interface.
.Description
The operation to Create a virtual machine network interface.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstance
.Link
https://learn.microsoft.com/powershell/module/az.scvmm/add-azscvmmnetworkinterface
#>
function Add-AzScVmmNetworkInterface {
  [OutputType([Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstance])]
  [CmdletBinding(DefaultParameterSetName = 'AddExpanded', PositionalBinding = $false, SupportsShouldProcess, ConfirmImpact = 'Medium')]
  param(
    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Category('Path')]
    [System.String]
    # The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
    ${MachineId},
  
    [Parameter(Mandatory)]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterfaceUpdate[]]
    # Gets or sets the list of network interfaces associated with the virtual machine.
    # To construct, see NOTES section for NETWORKPROFILENETWORKINTERFACE properties and create a hash table.
    ${NetworkProfileNetworkInterface}
  )
  
  process {
    $vmObj = Get-AzScVmmVM -MachineId $MachineId

    if ($NetworkProfileNetworkInterface.Count -ge 1) {
      $newNICObject = @()

      if ($vmObj.NetworkProfileNetworkInterface.Count -ge 1) {
        foreach ($vmNic in $vmObj.NetworkProfileNetworkInterface) {
          $sameObj = $false
          foreach ($nic in $NetworkProfileNetworkInterface) {
            if (($nic.Name -eq $vmNic.Name) -and ($nic.NicId -eq $vmNic.NicId)) {
              $sameObj = $true
              break
            }
          }

          if (-not $sameObj) {
            $nicObj = New-AzScVmmNetworkInterfaceUpdateObject -Ipv4AddressType $vmNic.Ipv4AddressType -Ipv6AddressType $vmNic.Ipv6AddressType -MacAddress $vmNic.MacAddress -MacAddressType $vmNic.MacAddressType -Name $vmNic.Name -NicId $vmNic.NicId -VirtualNetworkId $vmNic.VirtualNetworkId
            $newNICObject += $nicObj
          }
        }
      }
      
      $newNICObject += $NetworkProfileNetworkInterface
      Update-AzScVmmVM -MachineId $MachineId -NetworkProfileNetworkInterface $newNICObject
    }
  }
}