parameters:
- name: name
- name: vmImage
- name: osType
- name: psVersion
- name: dotnetVersion

jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 600
  pool:
    vmImage: ${{ parameters.vmImage }}

  steps:
  - task: UseDotNet@2
    displayName: Install desired .NET version ${{ parameters.dotnetVersion }}
    condition: ne('${{ parameters.dotnetVersion }}', '')
    inputs:
      packageType: sdk
      version: ${{ parameters.dotnetVersion }}

  - task: PowerShell@2
    displayName: Install desired Powershell version ${{ parameters.psVersion }}
    condition: ne('${{ parameters.psVersion }}', '')
    inputs:
      pwsh: true
      targetType: filePath
      filePath: ./tools/TestFx/Live/InitializeLiveTestEnvironment.ps1
      arguments: -DesiredVersion ${{ parameters.psVersion }}

  - task: PowerShell@2
    displayName: Install desired Az module from $(GalleryName)
    condition: and(succeeded(), ne(variables['skipLatest'], 'true'))
    inputs:
      pwsh: true
      targetType: filePath
      filePath: ./tools/TestFx/Live/InvokeLiveTestCITask.ps1
      arguments: -UseWindowsPowerShell ('${{ parameters.psVersion }}' -eq '5.1') -ScriptFile './tools/TestFx/Live/InstallLiveTestAzModules.ps1 -Source $(GalleryName) -AzPackagesLocation (Join-Path -Path $(DataLocation) -ChildPath AzPreviewPackages)'

  - template: get-keyvault-secret-steps.yml
    parameters:
      serviceConnectionName: $(LiveTestServiceConnectionName)
      keyVaultName: $(LiveTestServicePrincipalKeyVaultName)
      secretName: $(LiveTestServicePrincipalSecretName)
      outVar: 'LiveTestServicePrincipalSecret'
      execCondition: and(succeeded(), ne(variables['skipLatest'], 'true'))

  - task: PowerShell@2
    displayName: Connect Azure with live test service principal
    condition: and(succeeded(), ne(variables['skipLatest'], 'true'))
    inputs:
      pwsh: true
      targetType: filePath
      filePath: ./tools/TestFx/Live/InvokeLiveTestCITask.ps1
      arguments: -UseWindowsPowerShell ('${{ parameters.psVersion }}' -eq '5.1') -ScriptFile './tools/TestFx/Live/ConnectLiveTestServicePrincipal.ps1 $(LiveTestSubscriptionId) $(LiveTestTenantId) $(LiveTestServicePrincipalId) $(LiveTestServicePrincipalSecret)'
      failOnStderr: true
    retryCountOnTaskFailure: 3

  - task: PublishPipelineArtifact@1
    displayName: Publish live test results to pipeline artifact
    condition: and(succeeded(), ne(variables['skipLatest'], 'true'))
    inputs:
      artifact: livetest-os-${{ parameters.vmImage }}-ps-${{ replace(parameters.psVersion, '*', 'x') }}
      targetPath: $(DataLocation)
