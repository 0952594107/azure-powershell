variables:
  ArtifactsName: SampleFiles
  DataLocation: $(Pipeline.Workspace)/$(ArtifactsName)

pr: none
trigger: none

pool: pool-windows-2019

steps:
- task: PowerShell@2
  displayName: Create csv files
  inputs:
    pwsh: true
    targetType: inline
    script: |
      New-Item -Path $(Pipeline.Workspace) -Name $(ArtifactsName) -ItemType Directory -Force
      Set-Location -Path $(DataLocation)

      # Define the number of rows you want in the CSV file
      $numRows = 100

      # Create a list of sample data
      $data = @()

      # Loop to generate random data
      for ($i = 1; $i -le $numRows; $i++) {
          $item = [PSCustomObject]@{
              ID       = $i
              Name     = "Name_$i"
              Age      = Get-Random -Minimum 18 -Maximum 65
              Email    = "user_$i@example.com"
              JoinDate = (Get-Date).AddDays(-1 * (Get-Random -Minimum 0 -Maximum 365)).ToString("yyyy-MM-dd")
          }
          $data += $item
      }

      # Export the data to a CSV file
      $data | Export-Csv -Path $(DataLocation)/sample.csv -NoTypeInformation

      Write-Host "Sample CSV file generated."

- task: AzurePowerShell@5
  displayName: Upload files to storage blob
  inputs:
    pwsh: true
    azurePowerShellVersion: latestVersion
    azureSubscription: $(ServiceConnectionName)
    scriptType: inlineScript
    inline: |
      $DebugPreference = "Continue"

      $csvFiles = Get-ChildItem -Path $(DataLocation) -Filter "*.csv" -File -Recurse | Select-Object -ExpandProperty FullName
      Write-Host "Csv Files : $csvFiles"
      if ($null -ne $csvFiles) {
          Write-Host "##[group]Start uploading csv file."

          $localDate = [DateTime]::UtcNow.AddHours(8).ToString("yyyy-MM-dd")
          $context = New-AzStorageContext -StorageAccountName ${env:STORAGEACCOUNTNAME}
          $csvFiles | ForEach-Object {
              $csv = $_
              $csvName = Split-Path -Path $csv -Leaf

              $DebugPreference = "Continue"
              Set-AzStorageBlobContent -Container ${env:STORAGEBLOBCONTAINERNAME} -Blob "$localDate/$csvName" -File $csv -Context $context -Force

              Write-Host "##[section]Uploaded live test result $csv."
          }

          Write-Host "##[endgroup]"
      }
